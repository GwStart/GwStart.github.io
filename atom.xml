<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>那年匆匆</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.gaomingwei.cc/"/>
  <updated>2017-11-26T02:29:20.924Z</updated>
  <id>http://www.gaomingwei.cc/</id>
  
  <author>
    <name>执念</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Angular学习笔记之(Angular/cli)脚手架工具</title>
    <link href="http://www.gaomingwei.cc/Angular%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B-Angular-cli-%E8%84%9A%E6%89%8B%E6%9E%B6%E5%B7%A5%E5%85%B7.html"/>
    <id>http://www.gaomingwei.cc/Angular学习笔记之-Angular-cli-脚手架工具.html</id>
    <published>2017-11-25T13:11:13.000Z</published>
    <updated>2017-11-26T02:29:20.924Z</updated>
    
    <content type="html"><![CDATA[<p>Angular/cli是Angular打造的脚手架工具，大大提高我们的开发效率。</p><h3 id="1-安装："><a href="#1-安装：" class="headerlink" title="1. 安装："></a>1. 安装：</h3><pre><code>首先在安装之前你的电脑必须安装 [node](https://nodejs.org/en/);全局安装angular/cli<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @angular/cli</span><br></pre></td></tr></table></figure></code></pre><h3 id="2-创建新项目："><a href="#2-创建新项目：" class="headerlink" title="2.创建新项目："></a>2.创建新项目：</h3><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ng new my-app</span><br></pre></td></tr></table></figure>这个命令会快速的在我们本地生成一个新的angular项目</code></pre><h3 id="3-进入改目录，启动项目"><a href="#3-进入改目录，启动项目" class="headerlink" title="3.进入改目录，启动项目"></a>3.进入改目录，启动项目</h3><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd my-app</span><br><span class="line">ng serve --open</span><br></pre></td></tr></table></figure>ng serve 命令会启动开发服务器，监听文件的变动;打开浏览器 http://localhost:4200 既可以看到我们的新项目了。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Angular/cli是Angular打造的脚手架工具，大大提高我们的开发效率。&lt;/p&gt;
&lt;h3 id=&quot;1-安装：&quot;&gt;&lt;a href=&quot;#1-安装：&quot; class=&quot;headerlink&quot; title=&quot;1. 安装：&quot;&gt;&lt;/a&gt;1. 安装：&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;
      
    
    </summary>
    
    
      <category term="Angular" scheme="http://www.gaomingwei.cc/tags/Angular/"/>
    
  </entry>
  
  <entry>
    <title>windows10安装ubuntu16.04双系统</title>
    <link href="http://www.gaomingwei.cc/windows10%E5%AE%89%E8%A3%85ubuntu16-04%E5%8F%8C%E7%B3%BB%E7%BB%9F.html"/>
    <id>http://www.gaomingwei.cc/windows10安装ubuntu16-04双系统.html</id>
    <published>2017-10-26T04:27:31.000Z</published>
    <updated>2017-10-26T05:32:33.875Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Win10和Ubuntu16-04双系统安装详解"><a href="#Win10和Ubuntu16-04双系统安装详解" class="headerlink" title="Win10和Ubuntu16.04双系统安装详解"></a>Win10和Ubuntu16.04双系统安装详解</h2><p>准备材料：</p><p>U盘（容量&gt;8G）、UltraISO刻录软件、Ubuntu 16.04镜像文件</p><p>(更新：根据读者的反馈和笔者的亲身体验，Ubuntu16.04在使用安装和使用的时候存在不稳定因素，所以推荐使用Ubuntu15或者Ubuntu14，安装步骤如下不变)</p><h3 id="一、【Ubuntu系统空间准备】"><a href="#一、【Ubuntu系统空间准备】" class="headerlink" title="一、【Ubuntu系统空间准备】"></a>一、【Ubuntu系统空间准备】</h3><p>在Windows 10中打开“磁盘管理器”，找一个空闲的磁盘分区，压缩出来一部分空间给Ubuntu使用，压缩出来的硬盘应处于未分配状态。或者通过删除某个不使用的本地磁盘使其处于未分配状态。</p><p>注意：</p><p>（1）如果想学习Linux的话，留给Ubuntu使用的空间建议大于40G。</p><p>（2）这里是一整个未分配空间，这样可以在安装Ubuntu的时候直接选择和Windows共存安装，自动分配空间，不用自己再给系统分区设置大小了。</p><h3 id="二、【制作Ubuntu-16-04启动盘】"><a href="#二、【制作Ubuntu-16-04启动盘】" class="headerlink" title="二、【制作Ubuntu 16.04启动盘】"></a>二、【制作Ubuntu 16.04启动盘】</h3><p>1.插入用来制作启动盘的U盘（会被格式化，请备份好重要文件），打开UltraISO刻录软件（免费无限期试用）。</p><p>2.选择“文件(F)”-&gt;“打开”，找到“Ubuntu-16.04-desktop-amd64.iso”镜像文件，然后点击“打开”。</p><p>3.选择“启动(B)”-&gt;“写入硬盘映像”，打开启动盘制作界面。</p><p>4.然后点击下方的“写入”，会弹出警告提示，确定后，就会开始制作启动盘。写入完成后关闭UltraISO软件即可。</p><h3 id="三、【BIOS设置】"><a href="#三、【BIOS设置】" class="headerlink" title="三、【BIOS设置】"></a>三、【BIOS设置】</h3><p>1.关机，重新打开电脑，进入BIOS，关闭Windows系统的快速启动（Fast Boot）选项，即设置为Disable状态。</p><p>2.在BIOS中设置U盘为第一启动项，关闭电脑。</p><p>（有些电脑可以在开机之前先按住“Esc“，在开机可以直接打开UEFI开机启动选择界面，这一步可以查查自己电脑的方法）。</p><h3 id="四、【安装Ubuntu-16-04】"><a href="#四、【安装Ubuntu-16-04】" class="headerlink" title="四、【安装Ubuntu 16.04】"></a>四、【安装Ubuntu 16.04】</h3><p>1.从U盘启动，进入刻录到U盘的Ubuntu系统中。</p><p>说明：这一步选择”Try ubuntu“或者”Install Ubuntu”均可，都可进入试用Ubuntu界面。<br>2.选择试用Ubuntu，稍等一会，进入Ubuntu Desktop。</p><p>3.双击左上角的”Install Ubuntu 16.04LTS“，打开安装界面。（安装过程比较简单，根据提示输入一些信息即可）</p><p>A：在左侧语言栏选择安装语言，然后点击“继续”。</p><p>B：如果网速比较快，可以勾选“安装Ubuntu时下载更新”。（如果选择的语言是中文，这里在更新的时候会自动安装中文输入法，当然也可以安装完成后安装搜狗拼音输入法Linux版）</p><p>C：在硬盘中Ubuntu检测到有Windows系统存在，所以会默认使用未分配的那部分空间安装Ubuntu。这也是刚开始说的方便之处，避免了自己分区的不合理。</p><p>注意：如果第一项中没有‘与其它系统共存’这个明确提示，请务必选择最后一个‘其他选项’，然后手动分区。不然，你的硬盘就可能被格式化了（ 虽然不一定是坏事，如果不慎把硬盘格式化了，那就……体会一下“断、舍、离”的奥～Ծ.Ծ～义）<br>接下来会有提示信息。</p><p>然后下一步， 按着提示走! 完成即可；</p><p>注意在这里装完Ubuntu后要在Windows里面设置启动项~~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Win10和Ubuntu16-04双系统安装详解&quot;&gt;&lt;a href=&quot;#Win10和Ubuntu16-04双系统安装详解&quot; class=&quot;headerlink&quot; title=&quot;Win10和Ubuntu16.04双系统安装详解&quot;&gt;&lt;/a&gt;Win10和Ubuntu16
      
    
    </summary>
    
    
      <category term="系统优化" scheme="http://www.gaomingwei.cc/tags/%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>windows10常用优化设置</title>
    <link href="http://www.gaomingwei.cc/windows10%E5%B8%B8%E7%94%A8%E4%BC%98%E5%8C%96%E8%AE%BE%E7%BD%AE.html"/>
    <id>http://www.gaomingwei.cc/windows10常用优化设置.html</id>
    <published>2017-10-26T04:19:30.000Z</published>
    <updated>2018-03-10T14:15:41.600Z</updated>
    
    <content type="html"><![CDATA[<p>1.用360优化win10后开不了机的问题原因是禁用了三个服务：在360应用软件服务里dmwappushsvc、diagnsticsTrackingservice、coreMessaging这三个要开启服务。</p><p>2.WINDOWS FONT CACHE SERVICE 字体缓存服务此项不能优化，优化后开机要1分钟，原因是这个会导致加载桌面时间变长。</p><p>01 关闭家庭组（建议关闭）<br>因为这功能会导致硬盘和CPU处于高负荷状态<br>关闭方法：控制面板–&gt;家庭组–&gt;离开(如果加入了家庭组的话),然后在控制面板–&gt;管理工具–&gt;服务–&gt;将HomeGroup Listener和HomeGroup Provider两项服务禁用。<br>PS：当然以后要用到局域网在两台电脑之间传输东西的话可以重新开启再关闭。</p><p>02 关闭磁盘碎片整理、自动维护计划任务（建议关闭）<br>选中磁盘C–&gt;属性–&gt;工具–&gt;对驱动器进行优化和碎片整理–&gt;优化–&gt;更改设置–&gt;取消选择按计划运行。<br>PS：特别是系统盘是固态硬盘，更加需要关闭，碎片整理会直接影响到固态硬盘的寿命。</p><p>03 关闭Windows Defender（建议建议关闭）<br>控制面板–&gt;Windows Defender –&gt;设置–实施保护–&gt;去掉勾和管理员–&gt;启用 Windows Defender –&gt;去掉勾。<br>控制面板–&gt;管理工具–&gt;服务- Windows Defender Service禁用。<br>PS：可采用第三方杀毒软件如诺顿等。</p><p>04 关闭Windows Search（建议关闭）<br>控制面板–&gt;管理工具–&gt;服务–&gt;Windows Search禁用。</p><p>05 设置好 Superfetch 服务<br>服务Superfetch启动类型改成延迟启动或禁用，可以避免Win10对硬盘的频繁访问。<br>控制面板–&gt;管理工具–&gt;服务–&gt; Superfetch–&gt;启动类型–&gt;自动（延迟启动）。<br>PS：随着SSD（固态硬盘）等新一代硬盘的普及，类似功能已经不能再对系统性能带来提升，相反过度的读写操作反而加剧了SSD本身寿命的损害。因此如果你是一位SSD用户，还是建议关闭这两项服务，找到“Superfetch”和“Windows Search”，然后将启动类型修改为“禁用”即可。</p><p>06 Windows防火墙服务高级关闭（建议关闭）<br>但windows firewall (windows防火墙服务)可在控制面板里面的防火墙的“高级设置”里面的“属性”把“域配置文件”、“专用配置文件”、“公用配置文件”的状态改成关闭，这样就可以在不禁用防火墙服务的情况下关闭防火墙。</p><p>07 清理Windows.old文件夹(针对直接升级的系统)<br>方法1：快捷键Win+X命令提示符，输入rd X:windows.old /s(X代表盘符)<br>方法2：C盘–&gt;右键–&gt;属性–&gt;磁盘清理–&gt;选中以前的Windows 安装复选框–&gt;确定清理。</p><p>08 设置自动登陆（自选个人爱好）<br>Win+R–&gt;输入netplwiz–&gt;取消使用计算机必须输入用户名和密码的选项–&gt;然后双击需要自动登录的账户–&gt;输入你的密码。或者在管理里面将自己建的用户删除，使用系统带的administrator用户，默认是直接进系统的。</p><p>09 关闭ipv6（自选，建议关闭）<br>部分网卡驱动开启ipv6会导致开机系统未响应，假死。<br>网络共享中心–&gt;网络连接–&gt;以太网–&gt;属性–&gt;取消 ipv6 。</p><p>10 开启快速启动(建议开启)<br>开启会占C盘的部分容量，Win10启动飞快：控制面板–&gt;电源选项–&gt;选择电源按钮的功能，更改当前不可用的设置–&gt;关机设置–&gt;勾上启用快速启动。<br>PS：关闭休眠（自选）：Win+R输入powercfg–h on，关闭休眠：powercfg –h off(关闭后C盘会空出几G的空间)</p><p>11 关闭特效（个人爱好自选）<br>系统属性–&gt;高级–&gt;性能–&gt;设置–&gt;视觉效果–&gt;关闭淡出淡入效果。<br>PS：老机器开启可加快速度</p><p>12 合理设置虚拟内存（自选）<br>系统属性–&gt;高级–&gt;性能-设置，选择“高级”，点击虚拟内存中的“更改”，自动管理驱动器的分页文件大小。<br>PS：如果内存4G以内（含）设置内存的1.5倍到2倍之间，如果够大设置为自动管理。SSD（固态硬盘）位系统盘设置自动管理较好。</p><p>13 关闭第三方软件服务项（自选）<br>Win+ R输入“msconfig”–&gt;确定<br>打开系统配置–&gt;勾选隐藏所有的Microsoft服务去掉不需要运行的服务<br>PS：也可采用第三方优化软件禁用软件和相关服务自启动。</p><p>14 win10加速开机速度（自选）<br>Win+ R（调出运行窗口） – 输入msconfig – 引导 – 勾上无GUI引导，确定。</p><p>15 Win10加速关机速度（自选）<br>Win+R键。输入 gpedit.msc。<br>计算机管理中选择，模块管理–&gt;系统–&gt;关机选项<br>关闭会阻止或取消关机的应用程序的自动终止功能。</p><p>16关闭计划任务里的隐藏的自启动程序（自选）<br>控制面板–&gt;所有控制面板项–&gt;管理工具–&gt;任务计划程序–&gt;任务计划程序库–&gt;右侧任务列表–&gt;禁用不需要的任务。<br>17 关闭windows安全中心服务（自选）</p><p>Win+R键 输入services.msc回车——找到SecurityCenter ，设置禁用。<br>18关闭程序兼容助手服务（自选）</p><p>服务–&gt;Program CompatibilityAssistant Service服务 禁用。</p><p>19 代理自动发现服务（自选）</p><p>打开一个网页，找到工具，然后是Internet选项，连接，局域网设置，自动检测设置的勾去掉。</p><p>20 关闭onedrive，上传文件（自选，个人爱好）</p><p>Win+R键输入 gpedit.msc。<br>在windows组件里，禁止使用 onedirve 进行文件储存。<br>好了，LZ这么多年的经验总结到这。希望大家别嫌烦就好，仅分享而已。<br>PS：再把固态的一起说了吧<br>SSD优化（固态硬盘优化）是如何优化的呢？相信许多人都对此一概不知，以下是关于固态硬盘优化技巧，希望对正在使用SSD硬盘的童鞋有所帮助</p><h3 id="一、确定你的电脑运行在AHCI模式"><a href="#一、确定你的电脑运行在AHCI模式" class="headerlink" title="一、确定你的电脑运行在AHCI模式"></a>一、确定你的电脑运行在AHCI模式</h3><p>进入BIOS修改或者win+R，进入运行对话框，输入Regedit进入注册表，选择路径“HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\msahci”，右键修改磁盘模式为“0”，重启即可。</p><h3 id="二、关闭系统还原功能"><a href="#二、关闭系统还原功能" class="headerlink" title="二、关闭系统还原功能"></a>二、关闭系统还原功能</h3><p>这是一个非常重要的步骤，最近很多反馈表明系统还原会影响到SSD或者TRIM的正常操作，进而影响SSD的读写能力。右键单击我的电脑–&gt;选择属性–&gt;选择系统保护–&gt;设置项关闭系统还原（也可手动创建还原后再关闭还原）<br>PS：非固态硬盘也建议关闭。</p><h3 id="三、核实TRIM是否开启"><a href="#三、核实TRIM是否开启" class="headerlink" title="三、核实TRIM是否开启"></a>三、核实TRIM是否开启</h3><p>确认TRIM是否开启一直是一个比较困难的事情，因为我们必须非常密切的监控电脑的状态才能判断，而往往磁盘TRIM都是瞬间的事，所以很难察觉。我们可以通过如下方式来看TRIM是否开启成功：<br>打开CMD–&gt;右键点击CMD以管理员模式运行–&gt;输入“fsutil behavior query DisableDeleteNotify”<br>如果返回值是0，则代表您的TRIM处于开启状态如果返回值是1，则代表您的TRIM处于关闭状态</p><h3 id="四、关闭磁盘索引"><a href="#四、关闭磁盘索引" class="headerlink" title="四、关闭磁盘索引"></a>四、关闭磁盘索引</h3><p>磁盘索引的目的是为了加速进入相应的文件夹和目录，但是SSD产品本身的响应时间非常低，仅为0.1ms级别，相比传统硬盘快了百倍之多，所以没有必要做索引，过多的索引只会白白减少SSD的寿命。</p><p>关闭文件索引<br>点击我的电脑<br>右键单击SSD选择属性<br>取消索引勾选，点击确定。有时候可能会需要你以管理员权限操作，执行管理员权限即可。</p><h3 id="五、关闭磁盘整理计划"><a href="#五、关闭磁盘整理计划" class="headerlink" title="五、关闭磁盘整理计划"></a>五、关闭磁盘整理计划</h3><p>因为SSD上不存在碎片的问题，所以没有必要让它开启，频繁的操作只会减少其寿命。<br>六、关闭系统休眠<br>休眠对于传统硬盘来说是一个非常有用的功能，它可以快速加载最后使用的程序，然而在SSD时代这个功能变得无用了。因为SSD的系统启动时间基本都在20s以内，这和休眠模式的启动时间差不了多少，所以与其浪费那2.5GB左右的容量做休眠暂存，还不如拿出来用。</p><h3 id="七、关闭Prefetch（预取）和Superfetch（超级预取）"><a href="#七、关闭Prefetch（预取）和Superfetch（超级预取）" class="headerlink" title="七、关闭Prefetch（预取）和Superfetch（超级预取）"></a>七、关闭Prefetch（预取）和Superfetch（超级预取）</h3><p>这两项技术是XP和Vista时代的加速技术，对于SSD来讲0.1ms级的延迟完全不需要这项技术。所以关闭后性能会有提升。</p><h3 id="八、关闭预取技术"><a href="#八、关闭预取技术" class="headerlink" title="八、关闭预取技术"></a>八、关闭预取技术</h3><p>1、进入注册表，找到HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SessionManager\Memory Management\PrefetchParameters<br>2、右键点击EnablePrefetcher和EnableSuperfetch<br>3、修改这些数据从（1或3）到0;重启</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.用360优化win10后开不了机的问题原因是禁用了三个服务：在360应用软件服务里dmwappushsvc、diagnsticsTrackingservice、coreMessaging这三个要开启服务。&lt;/p&gt;
&lt;p&gt;2.WINDOWS FONT CACHE SERV
      
    
    </summary>
    
    
      <category term="系统优化" scheme="http://www.gaomingwei.cc/tags/%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>商城案例</title>
    <link href="http://www.gaomingwei.cc/%E5%95%86%E5%9F%8E%E6%A1%88%E4%BE%8B.html"/>
    <id>http://www.gaomingwei.cc/商城案例.html</id>
    <published>2017-10-19T12:20:55.000Z</published>
    <updated>2017-10-26T05:59:56.188Z</updated>
    
    <content type="html"><![CDATA[<p>一个使用传统div+css手写的商城案例</p><p>技术实现<br>    Html<br>    Div + Css<br>    JavaScript<br>    jQuery</p><p><a href="https://github.com/gmw-zjw/Shopping_Mall/" target="_blank" rel="noopener">项目地址</a><br><a href="http://htmlpreview.github.io/?https://github.com/gmw-zjw/Shopping_Mall/blob/master/jQueryMoban/index.html" target="_blank" rel="noopener">预览地址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一个使用传统div+css手写的商城案例&lt;/p&gt;
&lt;p&gt;技术实现&lt;br&gt;    Html&lt;br&gt;    Div + Css&lt;br&gt;    JavaScript&lt;br&gt;    jQuery&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/gmw-zjw/
      
    
    </summary>
    
    
      <category term="案例" scheme="http://www.gaomingwei.cc/tags/%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>一个倒计时案例</title>
    <link href="http://www.gaomingwei.cc/%E4%B8%80%E4%B8%AA%E5%80%92%E8%AE%A1%E6%97%B6%E6%A1%88%E4%BE%8B.html"/>
    <id>http://www.gaomingwei.cc/一个倒计时案例.html</id>
    <published>2017-10-17T14:42:55.000Z</published>
    <updated>2017-10-17T14:52:27.090Z</updated>
    
    <content type="html"><![CDATA[<p>想想做一个倒计时，采用jQuery设计，自适应不同屏幕设备(媒体查询);</p><p>为了接下我们方便使用，这里我们封装一个获取ID的方法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//封装获取ID的方法</span><br><span class="line">function $(id) &#123;</span><br><span class="line">return typeof id === &apos;string&apos; ? document.getElementById(id) : id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>定义一个showTime函数，写相关事件处理逻辑:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">function showTime() &#123;</span><br><span class="line">var curtime = new Date(); //当前时间</span><br><span class="line">var endtime = new Date(&quot;2017/12/12,00:00:00&quot;); //目标时间</span><br><span class="line">var leftTime = (endtime.getTime() - curtime.getTime()) / 1000; //毫秒(ms)</span><br><span class="line">var leftDay = parseInt(leftTime / (24 * 60 * 60)); //剩余天数</span><br><span class="line">var leftHour = parseInt(leftTime / (60 * 60) % 24); //剩余小时</span><br><span class="line">var leftMin = parseInt(leftTime / 60 % 60); //剩余分钟</span><br><span class="line">var leftSec = parseInt(leftTime % 60); //剩余秒</span><br><span class="line">$(&apos;day&apos;).innerHTML = checkTime(leftDay);</span><br><span class="line">$(&apos;hour&apos;).innerHTML = checkTime(leftHour);</span><br><span class="line">$(&apos;min&apos;).innerHTML = checkTime(leftMin);</span><br><span class="line">$(&apos;sec&apos;).innerHTML = checkTime(leftSec);</span><br><span class="line">if(leftTime &lt;= 0) &#123;</span><br><span class="line">$(&apos;title&apos;).innerHTML = &quot;再见2017，2018你好&quot;;</span><br><span class="line">$(&apos;day&apos;).innerHTML = 0;</span><br><span class="line">$(&apos;hour&apos;).innerHTML = 0;</span><br><span class="line">$(&apos;min&apos;).innerHTML = 0;</span><br><span class="line">$(&apos;sec&apos;).innerHTML = 0;</span><br><span class="line">&#125;</span><br><span class="line">setTimeout(showTime, 1000);</span><br><span class="line">&#125;</span><br><span class="line">showTime();</span><br></pre></td></tr></table></figure><p><a href="">在线预览</a><br><a href="">源码地址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;想想做一个倒计时，采用jQuery设计，自适应不同屏幕设备(媒体查询);&lt;/p&gt;
&lt;p&gt;为了接下我们方便使用，这里我们封装一个获取ID的方法:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
    
      <category term="案例" scheme="http://www.gaomingwei.cc/tags/%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>解决linux系统下Boot不足问题</title>
    <link href="http://www.gaomingwei.cc/%E8%A7%A3%E5%86%B3linux%E7%B3%BB%E7%BB%9F%E4%B8%8BBoot%E4%B8%8D%E8%B6%B3%E9%97%AE%E9%A2%98.html"/>
    <id>http://www.gaomingwei.cc/解决linux系统下Boot不足问题.html</id>
    <published>2017-10-17T13:05:55.000Z</published>
    <updated>2017-10-26T06:00:26.243Z</updated>
    
    <content type="html"><![CDATA[<h2 id="随着系统的反复更新，所导致-boot-资源不足问题，下面是我遇到时解决办法："><a href="#随着系统的反复更新，所导致-boot-资源不足问题，下面是我遇到时解决办法：" class="headerlink" title="随着系统的反复更新，所导致 /boot　资源不足问题，下面是我遇到时解决办法："></a>随着系统的反复更新，所导致 /boot　资源不足问题，下面是我遇到时解决办法：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">//查看  /boot 剩余资源</span><br><span class="line"></span><br><span class="line">文件系统          1K-块     已用     可用 已用% 挂载点</span><br><span class="line">udev            1943332       12  1943320    1% /dev</span><br><span class="line">tmpfs            391204     1420   389784    1% /run</span><br><span class="line">/dev/sda8      19461820 11494600  6955560   63% /</span><br><span class="line">none                  4        0        4    0% /sys/fs/cgroup</span><br><span class="line">none               5120        0     5120    0% /run/lock</span><br><span class="line">none            1956000    11428  1944572    1% /run/shm</span><br><span class="line">none             102400       56   102344    1% /run/user</span><br><span class="line">/dev/sda11     73274624 12503144 57026304   18% /home</span><br><span class="line">/dev/sda10       368615   255377    89686   75% /boot</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">//输入命令 dpkg --get-selections|grep linux 查看系统/boot 历史版本</span><br><span class="line"></span><br><span class="line">libselinux1:amd64install</span><br><span class="line">libselinux1:i386install</span><br><span class="line">linux-firmwareinstall</span><br><span class="line">linux-generic-lts-xenialinstall</span><br><span class="line">linux-headers-4.4.0-79install</span><br><span class="line">linux-headers-4.4.0-79-genericinstall</span><br><span class="line">linux-headers-4.4.0-81install</span><br><span class="line">linux-headers-4.4.0-81-genericinstall</span><br><span class="line">linux-headers-4.4.0-83install</span><br><span class="line">linux-headers-4.4.0-83-genericinstall</span><br><span class="line">linux-headers-4.4.0-87install</span><br><span class="line">linux-headers-4.4.0-87-genericinstall</span><br><span class="line">linux-headers-4.4.0-91install</span><br><span class="line">linux-headers-4.4.0-91-genericinstall</span><br><span class="line">linux-headers-4.4.0-92install</span><br><span class="line">linux-headers-4.4.0-92-genericinstall</span><br><span class="line">linux-headers-4.4.0-93install</span><br><span class="line">linux-headers-4.4.0-93-genericinstall</span><br><span class="line">linux-headers-4.4.0-96install</span><br><span class="line">linux-headers-4.4.0-96-genericinstall</span><br><span class="line">linux-headers-generic-lts-xenialinstall</span><br><span class="line">linux-image-4.4.0-31-genericdeinstall</span><br><span class="line">linux-image-4.4.0-79-genericinstall</span><br><span class="line">linux-image-4.4.0-81-genericinstall</span><br><span class="line">linux-image-4.4.0-83-genericinstall</span><br><span class="line">linux-image-4.4.0-87-genericinstall</span><br><span class="line">linux-image-4.4.0-91-genericinstall</span><br><span class="line">linux-image-4.4.0-92-genericinstall</span><br><span class="line">linux-image-4.4.0-93-genericinstall</span><br><span class="line">linux-image-4.4.0-96-genericinstall</span><br><span class="line">linux-image-extra-4.4.0-31-genericdeinstall</span><br><span class="line">linux-image-extra-4.4.0-79-genericdeinstall</span><br><span class="line">linux-image-extra-4.4.0-81-genericdeinstall</span><br><span class="line">linux-image-extra-4.4.0-83-genericinstall</span><br><span class="line">linux-image-extra-4.4.0-87-genericinstall</span><br><span class="line">linux-image-extra-4.4.0-91-genericinstall</span><br><span class="line">linux-image-extra-4.4.0-92-genericinstall</span><br><span class="line">linux-image-extra-4.4.0-93-genericinstall</span><br><span class="line">linux-image-extra-4.4.0-96-genericinstall</span><br><span class="line">linux-image-generic-lts-xenialinstall</span><br><span class="line">linux-libc-dev:amd64install</span><br><span class="line">linux-sound-baseinstall</span><br><span class="line">pptp-linuxinstall</span><br><span class="line">qtcreator-plugin-remotelinux:amd64install</span><br><span class="line">syslinuxinstall</span><br><span class="line">syslinux-commoninstall</span><br><span class="line">syslinux-legacyinstall</span><br><span class="line">util-linuxinstall</span><br></pre></td></tr></table></figure><p><strong> 输入 uname -a 查看/boot内存使用情况</strong> 输入 df 查看/boot<br><strong> 输入df -lh 查看内容使用情况</strong> 重启 sudo reboot<br><strong> install　是更新的内核，　deinstall　是删除的内核　</strong></p><p>输入命令　sudo apt-get autoremove linux-image-&lt;内核版本号&gt;　回车，　看到提示后 输入Y</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ df -lh</span><br><span class="line">文件系统        容量  已用  可用 已用% 挂载点</span><br><span class="line">udev            1.9G   12K  1.9G    1% /dev</span><br><span class="line">tmpfs           383M  1.4M  381M    1% /run</span><br><span class="line">/dev/sda8        19G   10G  7.7G   57% /</span><br><span class="line">none            4.0K     0  4.0K    0% /sys/fs/cgroup</span><br><span class="line">none            5.0M     0  5.0M    0% /run/lock</span><br><span class="line">none            1.9G   14M  1.9G    1% /run/shm</span><br><span class="line">none            100M   56K  100M    1% /run/user</span><br><span class="line">/dev/sda11       70G   12G   55G   18% /home</span><br><span class="line">/dev/sda10      360M   76M  262M   23% /boot</span><br></pre></td></tr></table></figure><p>ok 搞定    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;随着系统的反复更新，所导致-boot-资源不足问题，下面是我遇到时解决办法：&quot;&gt;&lt;a href=&quot;#随着系统的反复更新，所导致-boot-资源不足问题，下面是我遇到时解决办法：&quot; class=&quot;headerlink&quot; title=&quot;随着系统的反复更新，所导致 /b
      
    
    </summary>
    
    
      <category term="系统" scheme="http://www.gaomingwei.cc/tags/%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>使用Handlebars模板引擎打造的一个小案例</title>
    <link href="http://www.gaomingwei.cc/%E4%BD%BF%E7%94%A8Handlebars%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E%E6%89%93%E9%80%A0%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E6%A1%88%E4%BE%8B.html"/>
    <id>http://www.gaomingwei.cc/使用Handlebars模板引擎打造的一个小案例.html</id>
    <published>2017-09-24T12:26:42.000Z</published>
    <updated>2017-10-17T12:49:41.842Z</updated>
    
    <content type="html"><![CDATA[<p>使用Handlebars js模板引擎打造一款小慕课网小demo</p><p>主要技术:<br>    1.Handlears模板渲染引擎代码如下:<br>    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function renderTemplate(templateSelector, data, htmlSelector) &#123;</span><br><span class="line">var t = $(templateSelector).html();</span><br><span class="line">var f = Handlebars.compile(t);</span><br><span class="line">var h = f(data);</span><br><span class="line">$(htmlSelector).html(h);</span><br><span class="line">&#125;;</span><br><span class="line">```</span><br><span class="line">2.Handlebars 事件驱动</span><br></pre></td></tr></table></figure></p><pre><code>    //事件驱动函数　bindClassesEvent    function bindClassesEvent() {        $(&apos;#classes&apos;).delegate(&apos;li&apos;, &apos;click&apos;, function () {            $this = $(this);            var cid = $this.data(&apos;id&apos;);            $.getJSON(GETCLASSCHAPTER,  {cid: cid}, function (data) {                console.log(data);                renderTemplate(&quot;#chapter-template&quot;, data, &quot;#chapterdiv&quot;);                //调用显示                showNote(true);            });            $.getJSON(GETCLASSNOTE,  {cid: cid}, function (data) {                console.log(data);            });        })    };    //调用    bindClassesEvent();```</code></pre><p>技术实现:<br>    Handlebars + jQuery </p><p>API:<br>    <a href="http://imoocnote.calfnote.com/inter/getClasses.php?curPage=1" target="_blank" rel="noopener">http://imoocnote….getClasses.php?curPage=1</a><br>    <a href=""></a></p><p><a href="https://github.com/gmw-zjw/Handlebars.js" target="_blank" rel="noopener">源码地址</a></p><p><a href="http://htmlpreview.github.io/?https://github.com/gmw-zjw/Handlebars.js/blob/master/example/index.html" target="_blank" rel="noopener">项目在线预览</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用Handlebars js模板引擎打造一款小慕课网小demo&lt;/p&gt;
&lt;p&gt;主要技术:&lt;br&gt;    1.Handlears模板渲染引擎代码如下:&lt;br&gt;    &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://www.gaomingwei.cc/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>谈谈墙外那些事!</title>
    <link href="http://www.gaomingwei.cc/%E8%B0%88%E8%B0%88%E5%A2%99%E5%A4%96%E9%82%A3%E4%BA%9B%E4%BA%8B.html"/>
    <id>http://www.gaomingwei.cc/谈谈墙外那些事.html</id>
    <published>2017-09-24T11:49:39.000Z</published>
    <updated>2017-10-09T05:33:40.872Z</updated>
    
    <content type="html"><![CDATA[<p>自从谷歌宣布退出中国后，我们就远远的被墙在了外面。大家都知道谷歌上面有我们想要的资源，于是乎 ‘翻墙’ 就出现了，当然了 ‘翻墙’ 的方法有很多种比如说: 挂代理，修改本地hosts文件，等等…</p><p>今天介绍下使用修改hosts文件翻墙的方法(此方法存在不稳定性)。注意修改你的hosts文件之前要备份源文件，防止出错。</p><h3 id="hosts所在文件夹："><a href="#hosts所在文件夹：" class="headerlink" title="hosts所在文件夹："></a>hosts所在文件夹：</h3><ul><li>Windows 系统hosts位于 C:\Windows\System32\drivers\etc\hosts</li><li>Android（安卓）系统hosts位于 /etc/hosts</li><li>Mac（苹果电脑）系统hosts位于 /etc/hosts</li><li>iPhone（iOS）系统hosts位于 /etc/hosts</li><li>Linux系统hosts位于 /etc/hosts</li><li>绝大多数Unix系统都是在 /etc/hosts</li></ul><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>Google、Gmail、维基百科、Twitter、Facebook等必须请用https加密方式打开。 一般这些网站都是SSL加密链接，如：</p><ul><li>谷歌学术：<a href="https://scholar.google.com/" target="_blank" rel="noopener">https://scholar.google.com/</a></li><li>谷歌：<a href="https://www.google.com/ncr" target="_blank" rel="noopener">https://www.google.com/ncr</a></li><li>谷歌香港：<a href="https://www.google.com.hk/ncr" target="_blank" rel="noopener">https://www.google.com.hk/ncr</a></li><li>Twitter：<a href="https://twitter.com/?lang=zh-cn" target="_blank" rel="noopener">https://twitter.com/?lang=zh-cn</a></li></ul><p>在window下 找到你的 C:\Windows\System32\drivers\etc\hosts 文件， 用记事本打开hosts文件，下载好hosts文件后，打开复制里面的内容替换掉hosts原来里面的内容保存，ok至此搞定!</p><p>ubuntu/linux 方法异同</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/hosts</span><br></pre></td></tr></table></figure><p>更新-[10-8] <a href="http://pan.baidu.com/s/1o8yt4ds" target="_blank" rel="noopener">下载地址</a></p><p>好了至此你就可以轻松翻墙了，如果喜欢的换不要忘记点赞!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;自从谷歌宣布退出中国后，我们就远远的被墙在了外面。大家都知道谷歌上面有我们想要的资源，于是乎 ‘翻墙’ 就出现了，当然了 ‘翻墙’ 的方法有很多种比如说: 挂代理，修改本地hosts文件，等等…&lt;/p&gt;
&lt;p&gt;今天介绍下使用修改hosts文件翻墙的方法(此方法存在不稳定性)
      
    
    </summary>
    
    
      <category term="资源工具" scheme="http://www.gaomingwei.cc/tags/%E8%B5%84%E6%BA%90%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>(转)阿里前端推出新的 React 框架：Mirror</title>
    <link href="http://www.gaomingwei.cc/%E8%BD%AC-%E9%98%BF%E9%87%8C%E5%89%8D%E7%AB%AF%E6%8E%A8%E5%87%BA%E6%96%B0%E7%9A%84-React-%E6%A1%86%E6%9E%B6%EF%BC%9AMirror.html"/>
    <id>http://www.gaomingwei.cc/转-阿里前端推出新的-React-框架：Mirror.html</id>
    <published>2017-09-05T03:37:15.000Z</published>
    <updated>2017-09-05T04:43:11.103Z</updated>
    
    <content type="html"><![CDATA[<p>Mirror 是一款基于 React、Redux 和 react-router 的前端框架，简洁高效、灵活可靠。</p><h2 id="为什么？"><a href="#为什么？" class="headerlink" title="为什么？"></a>为什么？</h2><p>我们热爱 React 和 Redux。但是，Redux 中有太多的样板文件，需要很多的重复劳动，这一点令人沮丧；更别提在实际的 React 应用中，还要集成 react-router 的路由了。</p><p>一个典型的 React/Redux 应用看起来像下面这样：</p><h3 id="actions-js"><a href="#actions-js" class="headerlink" title="actions.js"></a>actions.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> ADD_TODO = <span class="string">'todos/add'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> COMPLETE_TODO = <span class="string">'todos/complete'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">addTodo</span>(<span class="params">text</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    type: ADD_TODO,</span><br><span class="line">    text</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">completeTodo</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    type: COMPLETE_TODO,</span><br><span class="line">    id</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="reducers-js"><a href="#reducers-js" class="headerlink" title="reducers.js"></a>reducers.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ADD_TODO, COMPLETE_TODO &#125; <span class="keyword">from</span> <span class="string">'./actions'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> nextId = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> <span class="title">todos</span>(<span class="params">state = [], action</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">switch</span> (action.type) &#123;</span><br><span class="line">    <span class="keyword">case</span> ADD_TODO:</span><br><span class="line">      <span class="keyword">return</span> [...state, &#123;<span class="attr">text</span>: action.text, <span class="attr">id</span>: nextId++&#125;]</span><br><span class="line">    <span class="keyword">case</span> COMPLETE_TODO:</span><br><span class="line">      <span class="keyword">return</span> state.map(<span class="function"><span class="params">todo</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (todo.id === action.id) todo.completed = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">return</span> todo</span><br><span class="line">      &#125;)</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">return</span> state</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Todos-js"><a href="#Todos-js" class="headerlink" title="Todos.js"></a>Todos.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; addTodo, completeTodo &#125; <span class="keyword">from</span> <span class="string">'./actions'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在某个事件处理函数中</span></span><br><span class="line">dispatch(addTodo(<span class="string">'a new todo'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在另一个事件处理函数中</span></span><br><span class="line">dispatch(completeTodo(<span class="number">42</span>))</span><br></pre></td></tr></table></figure><p>看起来是不是有点繁冗？这还是没考虑 异步 action 的情况呢。如果要处理异步 action，还需要引入 middleware（比如 redux-thunk 或者 redux-saga），那么代码就更繁琐了。</p><h2 id="使用-Mirror-重写"><a href="#使用-Mirror-重写" class="headerlink" title="使用 Mirror 重写"></a>使用 Mirror 重写</h2><h3 id="Todos-js-1"><a href="#Todos-js-1" class="headerlink" title="Todos.js"></a>Todos.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mirror, &#123; actions &#125; <span class="keyword">from</span> <span class="string">'mirrorx'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> nextId = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mirror.model(&#123;</span><br><span class="line">  name: <span class="string">'todos'</span>,</span><br><span class="line">  initialState: [],</span><br><span class="line">  reducers: &#123;</span><br><span class="line">    add(state, text) &#123;</span><br><span class="line">      <span class="keyword">return</span> [...state, &#123;text, <span class="attr">id</span>: nextId++&#125;]</span><br><span class="line">    &#125;,</span><br><span class="line">    complete(state, id) &#123;</span><br><span class="line">      <span class="keyword">return</span> state.map(<span class="function"><span class="params">todo</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (todo.id === id) todo.completed = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">return</span> todo</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在某个事件处理函数中</span></span><br><span class="line">actions.todos.add(<span class="string">'a new todo'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在另一个事件处理函数中</span></span><br><span class="line">actions.todos.complete(<span class="number">42</span>)</span><br></pre></td></tr></table></figure><p>看起来是不是有点繁冗？这还是没考虑 异步 action 的情况呢。如果要处理异步 action，还需要引入 middleware（比如 redux-thunk 或者 redux-saga），那么代码就更繁琐了。</p><h2 id="使用-Mirror-重写-1"><a href="#使用-Mirror-重写-1" class="headerlink" title="使用 Mirror 重写"></a>使用 Mirror 重写</h2><h3 id="Todos-js-2"><a href="#Todos-js-2" class="headerlink" title="Todos.js"></a>Todos.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mirror, &#123; actions &#125; <span class="keyword">from</span> <span class="string">'mirrorx'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> nextId = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">mirror.model(&#123;</span><br><span class="line">  name: <span class="string">'todos'</span>,</span><br><span class="line">  initialState: [],</span><br><span class="line">  reducers: &#123;</span><br><span class="line">    add(state, text) &#123;</span><br><span class="line">      <span class="keyword">return</span> [...state, &#123;text, <span class="attr">id</span>: nextId++&#125;]</span><br><span class="line">    &#125;,</span><br><span class="line">    complete(state, id) &#123;</span><br><span class="line">      <span class="keyword">return</span> state.map(<span class="function"><span class="params">todo</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (todo.id === id) todo.completed = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">return</span> todo</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在某个事件处理函数中</span></span><br><span class="line">actions.todos.add(<span class="string">'a new todo'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在另一个事件处理函数中</span></span><br><span class="line">actions.todos.complete(<span class="number">42</span>)</span><br></pre></td></tr></table></figure><p>是不是就简单很多了？只需一个方法，即可定义所有的 action 和 reducer（以及 异步 action）。</p><p>而且，这行代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">actions.todos.add(<span class="string">'a new todo'</span>)</span><br></pre></td></tr></table></figure><p>完全等同于这行代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dispatch(&#123;</span><br><span class="line">  type: <span class="string">'todos/add'</span>,</span><br><span class="line">  text: <span class="string">'a new todo'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>完全不用关心具体的 action type，不用写大量的重复代码。简洁，高效。</p><h2 id="异步-action"><a href="#异步-action" class="headerlink" title="异步 action"></a>异步 action</h2><p>上述代码示例仅仅针对同步 action。</p><p>事实上，Mirror 对异步 action 的处理，也同样简单：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mirror.model(&#123;</span><br><span class="line">  <span class="comment">// 省略前述代码</span></span><br><span class="line">  effects: &#123;</span><br><span class="line">    <span class="keyword">async</span> addAsync(data, getState) &#123;</span><br><span class="line">      <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="built_in">Promise</span>.resolve(data)</span><br><span class="line">      <span class="comment">// 调用 `actions` 上的方法 dispatch 一个同步 action</span></span><br><span class="line">      actions.todos.add(res)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>没错，这样就定义了一个异步 action。上述代码的效果等同于如下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">actions.todos.addSync = <span class="function">(<span class="params">data, getState</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> dispatch(&#123;</span><br><span class="line">    type: <span class="string">'todos/addAsync'</span>,</span><br><span class="line">    data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用 actions.todos.addSync 方法，则会 dispatch 一个 type 为 todos/addAsync 的 action。</p><p>你可能注意到了，处理这样的 action，必须要借助于 middleware。不过你完全不用担心，使用 Mirror 无须引入额外的 middleware，你只管定义 action/reducer，然后简单地调用一个函数就行了.</p><h2 id="更加单的路由"><a href="#更加单的路由" class="headerlink" title="更加单的路由"></a>更加单的路由</h2><p>Mirror 完全按照 react-router 4.x 的接口和方式定义路由，因此没有任何新的学习成本。</p><p>更方便的是，Mirror 的 Router 组件，其 history 对象以及跟 Redux store 的联结是自动处理过的，所以你完全不用关心它们，只需关心你自己的各个路由即可。</p><p>而且，手动更新路由也非常简单，调用 actions.routing 对象上的方法即可更新。</p><h2 id="理念"><a href="#理念" class="headerlink" title="理念"></a>理念</h2><p>Mirror 的设计理念是，在尽可能地避免发明新的概念，并保持现有开发模式的前提下，减少重复劳动，提高开发效率。</p><p>Mirror 总共只提供了 4 个新的 API，其余仅有的几个也都是已存在于 React/Redux/react-router 的接口，只不过做了封装和强化。</p><p>所以，Mirror 并没有“颠覆” React/Redux 开发流，只是简化了接口调用，省去了样板代码：</p><p><a href="https://github.com/GwStart/GwStart.github.io/blob/master/images/Mirror.jpg" target="_blank" rel="noopener">https://github.com/GwStart/GwStart.github.io/blob/master/images/Mirror.jpg</a></p><p>在对路由的处理上，也是如此。</p><h2 id="如何使用？"><a href="#如何使用？" class="headerlink" title="如何使用？"></a>如何使用？</h2><p>使用 <a href="https://github.com/facebookincubator/create-react-app" target="_blank" rel="noopener">create-react-app</a> 创建一个新的 app：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm i -g create-react-app</span><br><span class="line">$ create-react-app my-app</span><br></pre></td></tr></table></figure><p>穿件之后，从你npm安装MIrror:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd my-app</span><br><span class="line">npm i --save mirrorx</span><br><span class="line">npm start</span><br></pre></td></tr></table></figure><p>查看 <a href="https://github.com/mirrorjs/mirror" target="_blank" rel="noopener">文档</a> 了解更多。</p><p><a href="https://qianduan.guru/posts/5997b695852d815d019c1659" target="_blank" rel="noopener">原文地址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Mirror 是一款基于 React、Redux 和 react-router 的前端框架，简洁高效、灵活可靠。&lt;/p&gt;
&lt;h2 id=&quot;为什么？&quot;&gt;&lt;a href=&quot;#为什么？&quot; class=&quot;headerlink&quot; title=&quot;为什么？&quot;&gt;&lt;/a&gt;为什么？&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="框架" scheme="http://www.gaomingwei.cc/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>web资料整合</title>
    <link href="http://www.gaomingwei.cc/web%E8%B5%84%E6%96%99%E6%95%B4%E5%90%88.html"/>
    <id>http://www.gaomingwei.cc/web资料整合.html</id>
    <published>2017-09-04T09:42:11.000Z</published>
    <updated>2017-09-04T09:42:37.917Z</updated>
    
    <content type="html"><![CDATA[<h2 id="推荐文章-教程"><a href="#推荐文章-教程" class="headerlink" title="推荐文章(教程)"></a>推荐文章(教程)</h2><h3 id="html-5"><a href="#html-5" class="headerlink" title="html(5)"></a>html(5)</h3><ul><li><a href="http://tgideas.qq.com/webplat/info/news_version3/804/7104/7106/m5723/201506/354489.shtml" target="_blank" rel="noopener">后HTML5时代一</a></li><li><a href="http://tgideas.qq.com/webplat/info/news_version3/804/7104/7106/m5723/201506/355023.shtml" target="_blank" rel="noopener">后HTML5时代二</a> (简单粗暴，没什么废话)</li><li><a href="http://ued.ctrip.com/blog/5133.html" target="_blank" rel="noopener">html5推广</a></li><li><a href="https://juejin.im/post/595f41766fb9a06bc17c2c8d" target="_blank" rel="noopener">匠心打造canvas签名组件</a></li><li><a href="http://www.cnblogs.com/TomXu/category/336175.html" target="_blank" rel="noopener">HTML5/CSS3</a> (汤姆大叔总结的html5和css3的新特性)</li><li><a href="https://isux.tencent.com/h5-animation-highway.html" target="_blank" rel="noopener">HTML5动画开发快车道</a></li><li><a href="https://isux.tencent.com/h5-performance.html" target="_blank" rel="noopener">移动H5前端性能优化指南</a></li><li><a href="http://www.tqtan.com/2015/01/31/play-with-h5/" target="_blank" rel="noopener">玩转HTML5移动页面</a></li><li><a href="https://juejin.im/post/59598ecf5188250d8d141fff" target="_blank" rel="noopener">HTML5进阶系列：文件上传预下载</a></li><li><a href="https://zhuanlan.zhihu.com/p/27052826" target="_blank" rel="noopener">HTML5进阶系列：canvas动态图表</a></li><li><a href="https://zhuanlan.zhihu.com/p/26666141" target="_blank" rel="noopener">HTML5进阶系列：拖放API实现拖放排序</a> （这个系列的文章都不错，值得大家一看）</li><li><a href="https://isux.tencent.com/h5active.html" target="_blank" rel="noopener">H5动画效果的常见制作手法</a></li><li><a href="https://segmentfault.com/a/1190000010638325" target="_blank" rel="noopener">超多经典canvas实例，动态粒子背景、移动炫彩小球等等….</a></li><li><a href="https://isux.tencent.com/canvas-particle-animation.html" target="_blank" rel="noopener">打造高大上的canvas粒子动画效果</a></li></ul><h3 id="CSS-3"><a href="#CSS-3" class="headerlink" title="CSS(3)"></a>CSS(3)</h3><ul><li><a href="http://www.w3cplus.com/resources/css3-tutorial-and-case" target="_blank" rel="noopener">CSS3属性教程与案例分享</a> (大漠的CSS3干货，进去里面可以逐个看，对css3的学习很有用)</li><li><a href="http://www.w3cplus.com/blog/163.html" target="_blank" rel="noopener">CSS3实现11种经典的css技术</a> (大漠的CSS3经典实例干货，对css3的学习很有用)</li><li><a href="http://www.w3cplus.com/w3cplusDemo/index.html" target="_blank" rel="noopener">W3cplus demo</a> (w3cplus的案例，非常好，值得一看)</li><li><a href="http://www.cnblogs.com/zhuzhenwei918/p/6120294.html" target="_blank" rel="noopener">强大的Css3</a> (概括性的说明css3的新特性的一篇文章)</li><li><a href="http://www.cnblogs.com/lhb25/archive/2013/01/29/css3-rgba-tutorials.html" target="_blank" rel="noopener">CSS3经典教程系列</a> (不要忘记看完这个系列，文章都不错)</li><li><a href="http://www.cnblogs.com/nzbin/archive/2017/08/06/7073601.html" target="_blank" rel="noopener">如何编写轻量级CSS框架</a></li><li><a href="http://caibaojian.com/css-protips.html" target="_blank" rel="noopener">21条CSS高级技巧</a></li><li><a href="http://www.cnblogs.com/aaronjs/p/4744014.html" target="_blank" rel="noopener">CSS3技术-雪碧图自适应缩放与精灵图方案</a></li><li><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener">Flex布局教程：语法篇</a></li><li><a href="http://www.ruanyifeng.com/blog/2015/07/flex-examples.html" target="_blank" rel="noopener">Flex布局教程：实例篇</a></li><li><a href="http://web.jobbole.com/91473/" target="_blank" rel="noopener">奇妙的CSS shapes(css图形)</a></li><li><a href="http://www.qdfuns.com/notes/25859/9e01e4cf0dd9b634744ff698af9fc8c1.html" target="_blank" rel="noopener">使用CSS3制作各种形状的图形（转载other）</a></li><li><a href="http://web.jobbole.com/88197/" target="_blank" rel="noopener">有趣的CSS题目（1）：左边竖条的实现方法</a> (看了第一篇，可以往下面看，总会会帮助的，不过这个网站有时候加载不出图片，如果加载不出图片，放弃还是坚持，大家抓主意)</li><li><a href="http://www.cnblogs.com/coco1s/p/7197662.html" target="_blank" rel="noopener">纯css实现波浪效果！</a></li><li><a href="http://www.w3cplus.com/animation/check-css-animation-performance-with-the-browsers-dev-tools.html" target="_blank" rel="noopener">使用浏览器开发者检测css动画性能</a></li><li><a href="http://imweb.io/topic/5643850eed18cc424277050e" target="_blank" rel="noopener">搞定这些疑难杂症，向css3动画说yes</a></li><li><a href="http://yincheng.site/using-html-css-instead-of-js" target="_blank" rel="noopener">Effective前端1：能使用heml/css解决的问题就不要使用javascript</a></li><li><a href="https://isux.tencent.com/native-animation.html" target="_blank" rel="noopener">如何让你的动画更加自然？</a></li><li><a href="https://css-tricks.com/examples/ShapesOfCSS/" target="_blank" rel="noopener">css动画图形</a></li><li><a href="https://tympanus.net/Development/CreativeLinkEffects/" target="_blank" rel="noopener">css各种鼠标效果</a></li><li><a href="https://www.ibm.com/developerworks/cn/web/1202_zhouxiang_css3/" target="_blank" rel="noopener">深入了解常css3新特性</a> （也是概括性的总结，这个系列值得推荐）</li><li><a href="http://www.imweb.io/topic/55e32fd5771670e207a16bb9" target="_blank" rel="noopener">前端如何呼风唤雨</a></li><li><a href="http://www.qdfuns.com/notes/40906/28abf71f9486e2cd86ae803e305b39fa.html" target="_blank" rel="noopener">:after和 :before炫酷用法总结</a></li><li><a href="http://web.jobbole.com/91586/" target="_blank" rel="noopener">神奇的conic-gradient圆锥渐变</a></li><li><a href="http://web.jobbole.com/90964/?utm_source=blog.jobbole.com&amp;utm_medium=relatedPosts" target="_blank" rel="noopener">10个优质的CSS与JS LOGO 动画示例</a></li><li><a href="https://isux.tencent.com/emancipate-gpu.html" target="_blank" rel="noopener">被解放的GPU-提高CSS3性能</a></li><li><a href="http://www.cnblogs.com/limingxi/p/3709322.html" target="_blank" rel="noopener">【项目总结】谈一谈电商网站前端css的整体架构设计（1）</a></li><li><a href="http://www.cnblogs.com/limingxi/p/3710600.html" target="_blank" rel="noopener">【项目总结】谈一谈电商网站前端css的整体架构设计（2）</a></li><li><a href="https://segmentfault.com/a/1190000010780991" target="_blank" rel="noopener">个人总结（css3新特性）</a></li><li><a href="https://segmentfault.com/a/1190000010427231" target="_blank" rel="noopener">CSS3热身实战–过渡与动画（实现下拉，手风琴，无缝滚动）</a></li><li><a href="https://segmentfault.com/a/1190000010640099" target="_blank" rel="noopener">编写自己的代码库（css3常用动画的实现）</a></li></ul><h3 id="javascript"><a href="#javascript" class="headerlink" title="javascript"></a>javascript</h3><ul><li><a href="http://web.jobbole.com/91737/" target="_blank" rel="noopener">javascript核心概念归纳整理</a> (概括性的说明一些核心概念)</li><li><a href="http://taobaofed.org/blog/2017/02/16/a-guide-to-api-design/" target="_blank" rel="noopener">从达标到卓越—API设计之道</a></li><li><a href="http://taobaofed.org/blog/2017/03/16/javascript-functional-programing/" target="_blank" rel="noopener">我眼中的javascript函数式编程</a></li><li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/15/2288411.html" target="_blank" rel="noopener">深入理解JavaScript系列</a> （汤姆大叔写的JavaScript系列，对学习和深入js很有用）</li><li><a href="http://purplebamboo.github.io/2015/03/16/javascript-component/" target="_blank" rel="noopener">JavaScript组件优化</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzAxODE2MjM1MA==&amp;mid=2651552444&amp;idx=1&amp;sn=2b0d4b47dd5f0377385b1d6390fa64b8&amp;chksm=8025ad7db752246b20f2ae2929530966d8d1c53d0210ad190aa5eda38c1302f1f3b734671325&amp;mpshare=1&amp;scene=23&amp;srcid=0809BXLS1CRKAj6CXYTasOJZ#rd" target="_blank" rel="noopener">如何写出小而清晰的函数？（JS版）</a></li><li><a href="https://segmentfault.com/a/1190000009704212" target="_blank" rel="noopener">javascript对象详解: <em>proto</em> 和 prototype的区别和联系</a></li><li><a href="https://segmentfault.com/a/1190000004282206" target="_blank" rel="noopener">理解javascript中面向对象（一）—原型继承</a> （这个专栏（实用至上）文章质量不错，值得留意）</li><li><a href="http://www.w3cvip.com/425.html" target="_blank" rel="noopener">微前端 -javascript常用的设计模式详解</a> </li><li><a href="https://segmentfault.com/a/1190000000320102" target="_blank" rel="noopener">10个你需要了解的最佳javascript开发实践</a></li><li><a href="http://www.cnblogs.com/wangfupeng1988/p/4001284.html" target="_blank" rel="noopener">深入理解javascript原型和闭包系列</a></li><li><a href="https://segmentfault.com/a/1190000000652749" target="_blank" rel="noopener">JavaScript学习总结（一） 基础部分</a> （这个系列的文章不错，不要忘记看完这个系列不过大家得在发文章的专栏找下这个系列的文章，因为作者在这个专栏发文不是连着发一个系列，中间也夹杂着其它文章，不过也很好找。在这专栏（trigkit4）里面，即使不是这个系列的文章，我看过其中几篇，感觉也很好，大家可以留意下）</li><li><a href="https://segmentfault.com/a/1190000003932488" target="_blank" rel="noopener">JavaScript设计模式与开发实践 | 01 - 面向对象的JavaScript</a> （这个系列的教程不错，《JavaScript设计模式与开发实践》的笔记，这本书我也看过，这本书不错，作者整理总结得也不错，大家看完，收获不少）</li><li><a href="https://www.zhihu.com/question/54637225/answer/140362071?utm_source=qq&amp;utm_medium=social" target="_blank" rel="noopener">JavaScript函数编程存在性能问题吗？</a></li><li><a href="https://mp.weixin.qq.com/s/5dAjzaTgbhZUpZ6w-juU8Q" target="_blank" rel="noopener">如何让JS写的更漂亮</a></li><li><a href="https://juejin.im/post/5976b1ef5188250c980304c9" target="_blank" rel="noopener">JS的平凡之路 - - - 学习人气眼中的效果（上）</a></li><li><a href="https://shimo.im/doc/VXqv2bxTlOUiJJqO/" target="_blank" rel="noopener">你还在用for循环大法莫？</a></li><li><a href="https://segmentfault.com/a/1190000006990480" target="_blank" rel="noopener">前端模板的原理与实现</a></li><li><a href="http://blog.jobbole.com/56689/" target="_blank" rel="noopener">只有20行JavaScript代码！ 手把手计教你写一个页面模板引擎</a></li><li><a href="https://segmentfault.com/a/1190000010744960" target="_blank" rel="noopener">【教学篇】150行代码教你实现一个低版本MVVM库（1）– 原理篇</a></li><li><a href="https://segmentfault.com/a/1190000010752076" target="_blank" rel="noopener">【教学篇】150行代码教你实现一个低版本MVVM库（2）– 代码篇</a> （可以关注这篇文章对应的专栏，写得不错，不知道作者还会不会写下一篇）</li><li><a href="https://www.zhihu.com/question/19713563" target="_blank" rel="noopener">如何循序渐进、有效的学习JavaScript？</a></li><li><a href="http://www.cnblogs.com/moqing/p/5665126.html" target="_blank" rel="noopener">过目不忘JS正则表达式</a></li><li><a href="https://segmentfault.com/a/1190000010456158" target="_blank" rel="noopener">JavaScript进阶之深入理解数据双向绑定</a></li><li><a href="https://segmentfault.com/a/1190000004847657" target="_blank" rel="noopener">利用 JavaScript 数据绑定实现一个简单的MVVM库</a></li><li><a href="https://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">正则表达式30分钟入门教程</a></li><li><a href="https://hijiangtao.github.io/2017/08/03/How-to-Manipulate-DOM-Effectively/" target="_blank" rel="noopener">如何监听页面 DOM 变动并高效响应</a></li><li><a href="http://www.ruanyifeng.com/blog/2016/11/intersectionobserver_api.html" target="_blank" rel="noopener">IntersectionObserver API 使用教程</a> （利用这个API可以更简单的实现图片懒加载和其它事情，性能也更高）<br>（下面三个连接，是知乎上的几个话题，里面的回答质量参差不齐，大家可以挑些高质量的回答看，绝对有帮助）</li><li><a href="https://www.zhihu.com/question/27471576/answer/211014066" target="_blank" rel="noopener">作为一名前端开发人员，有哪些值的一读的js代码？</a></li><li><a href="https://www.zhihu.com/question/27428135" target="_blank" rel="noopener">JavaScript有什么奇技意淫？</a></li><li><a href="https://www.zhihu.com/question/38269966" target="_blank" rel="noopener">用JavaScript 可以做哪些有趣的事情？</a><br>（以下几篇是我自己的文章，前两篇主要是写js常用的一些小实例，虽然觉得跟很多大牛的文章比起来有差距，但是我觉得写得也不错，对大家也是有用，就贴上链接，最后一篇是关于我印象深刻的面试题）</li><li><a href="https://segmentfault.com/a/1190000010225928" target="_blank" rel="noopener">编写自己的代码库（javascript常用实例的实现与封装）</a></li><li><a href="https://segmentfault.com/a/1190000010527982" target="_blank" rel="noopener">编写自己的代码库（javascript常用实例的实现与封装–续）</a></li><li><a href="https://segmentfault.com/a/1190000010114505" target="_blank" rel="noopener">让我深刻的javascript面试题</a></li></ul><h3 id="javascript-es6"><a href="#javascript-es6" class="headerlink" title="javascript(es6)"></a>javascript(es6)</h3><ul><li><a href="http://es6.ruanyifeng.com/" target="_blank" rel="noopener">阮一峰 es6</a> (可以当做在线书籍看)</li><li><a href="http://taobaofed.org/blog/2016/07/22/es6-basics/" target="_blank" rel="noopener">ES6 你可能不知道的事 - 基础篇</a></li><li><a href="http://taobaofed.org/blog/2016/11/03/es6-advanced/" target="_blank" rel="noopener">ES6 你可能不知道的事 - 进阶篇</a></li><li><a href="http://www.jianshu.com/p/ebfeb687eb70" target="_blank" rel="noopener">30分钟掌握ES6/ES2015核心内容</a> （简单粗暴介绍es6核心）</li><li><a href="https://juejin.im/post/597724c26fb9a06bb75260e8" target="_blank" rel="noopener">八段代码彻底掌握Promise</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTA1MjAxMQ==&amp;mid=2651226733&amp;idx=1&amp;sn=3723daf1d45a67be76be4358eca92c40&amp;chksm=bd495be98a3ed2ff8b7d630a646fab13cca6f6bafacd650f2188b41432d35ab430efa1e19d3e&amp;mpshare=1&amp;scene=23&amp;srcid=07266sd1A9P62rw0hBVxOcer#rd" target="_blank" rel="noopener">ECMAScript 6 新特性</a> （总结性描写常用的es6新特性）</li></ul><h3 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h3><ul><li><a href="http://www.cnblogs.com/aaronjs/p/3279314.html" target="_blank" rel="noopener">jQuery源码分析</a></li><li><a href="http://www.cnblogs.com/zhuzhenwei918/p/6181760.html" target="_blank" rel="noopener">jQuery中100个技巧（译）</a></li><li><a href="http://www.42du.cn/p/16" target="_blank" rel="noopener">者几条jQuery提升性能规则你要牢记</a></li><li><a href="https://segmentfault.com/a/1190000009679758" target="_blank" rel="noopener">jQuery坑，说说哪些大家踩过的坑</a></li><li><a href="https://segmentfault.com/a/1190000010063989" target="_blank" rel="noopener">jQuery学习笔记</a> （总结性说明JQuery常用的API， 也可以）</li><li><a href="http://www.cnblogs.com/jesse131/p/5494590.html" target="_blank" rel="noopener">jQuery插件开发总结</a></li></ul><h3 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h3><ul><li><a href="https://cn.vuejs.org/v2/guide/" target="_blank" rel="noopener">Vue官网</a></li><li><a href="https://segmentfault.com/a/1190000008279436" target="_blank" rel="noopener">Vue2.x采坑与总结</a></li><li><a href="https://www.v2ex.com/t/325312#reply1" target="_blank" rel="noopener">Vue 中你不知道但是很实用的黑科技</a></li><li><a href="https://aotu.io/notes/2016/12/28/vue-clock/" target="_blank" rel="noopener">一个例子事件vue2.0与1.0的区别</a></li><li><a href="http://www.jianshu.com/p/b544091c3d67" target="_blank" rel="noopener">我从未见过如此简单易懂的Vue教程</a></li><li><a href="https://vuejs-tips.github.io/cheatsheet/" target="_blank" rel="noopener">vue-API 2.3 版本的API大全</a></li><li><a href="https://segmentfault.com/a/1190000010813937" target="_blank" rel="noopener">Vue.js 插件开发指南</a> （从开发到发布的一个流程，实例简单易懂）</li><li><a href="http://www.tuicool.com/articles/vmaiei2" target="_blank" rel="noopener">使用 Vue.js 创建的 Calendar</a></li><li><a href="https://zhuanlan.zhihu.com/p/26535530?utm_medium=social&amp;utm_source=qq?utm_medium=social&amp;utm_source=qq" target="_blank" rel="noopener">加薪DAY10」Vue开源项目库汇总（杂七杂八的库都有，质量当然也是有高有低，大家挑着看。）</a></li><li><a href="https://zhuanlan.zhihu.com/p/25589193" target="_blank" rel="noopener">Vue.js 的实用技巧（一）(看了第一篇，别忘记剩下的)</a></li><li><a href="https://github.com/zoro-web/blog/issues/2" target="_blank" rel="noopener">深入vue2.0底层思想–模板渲染 </a></li><li><a href="http://www.cnblogs.com/keepfool/p/5690366.html" target="_blank" rel="noopener">Vue.js——vue-router 60分钟快速入门</a></li><li><a href="http://hcysun.me/2017/03/03/Vue%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/" target="_blank" rel="noopener">Vue2.1.7源码学习</a></li><li><a href="https://github.com/DMQ/mvvm" target="_blank" rel="noopener">剖析Vue实现原理 - 如何实现双向绑定mvvm</a></li><li><a href="https://segmentfault.com/a/1190000009397476" target="_blank" rel="noopener">Vue.js入门（一）–MVVM框架理解</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzAxODE2MjM1MA==&amp;mid=2651552436&amp;idx=2&amp;sn=837a93a7d364da7623de005d55b44c16&amp;chksm=8025ad75b7522463f5cd3b03856602b999cdf9dbb19afd501dd0e93acdd526da7f67b085d5a7&amp;mpshare=1&amp;scene=23&amp;srcid=0807Itvw3TvEVYwhGzIpxd34#rd" target="_blank" rel="noopener">Vue2 源码分析——逻辑梳理</a></li><li><a href="https://segmentfault.com/a/1190000010801357" target="_blank" rel="noopener">vue快速入门的三个小实例（我自己的文章，比较基础的用法，觉得也还不错，就放上来了）</a></li></ul><h3 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h3><p>（下面的文章，有些是webpack1.x和2.x的，考虑到现在已经更新到3.x了，大家看时候要注意区别）</p><ul><li><a href="https://doc.webpack-china.org/" target="_blank" rel="noopener">webpack中文网</a></li><li><a href="http://parking.zunmi.cn/?site=webpackdoc.com&amp;t=1504355800&amp;s=9cb18e98e30a30b474266b7ab8774bb8&amp;acct=144" target="_blank" rel="noopener">webpack官方文档</a></li><li><a href="https://github.com/lcxfs1991/blog/issues/2" target="_blank" rel="noopener">webpack使用优化（基本篇）</a></li><li><a href="http://www.tuicool.com/articles/vAbYruq" target="_blank" rel="noopener">webpack常用功能介绍</a></li><li><a href="https://segmentfault.com/a/1190000005770042" target="_blank" rel="noopener">开发工具心得：如何 10 倍提高你的 Webpack 构建效率</a></li><li><a href="https://zhuanlan.zhihu.com/p/26710831" target="_blank" rel="noopener">Webpack 大法之 Code Splitting</a></li><li><a href="https://segmentfault.com/a/1190000006843916" target="_blank" rel="noopener">webpack多页应用架构系列（一）：一步一步解决架构痛点（看了第一篇不要忘记剩下的，这个系列的文章不错）</a></li></ul><h3 id="gulp"><a href="#gulp" class="headerlink" title="gulp"></a>gulp</h3><ul><li><a href="http://www.ydcss.com/archives/18" target="_blank" rel="noopener">gulp详细入门教程</a></li><li><a href="http://www.cnblogs.com/2050/p/4198792.html" target="_blank" rel="noopener">前端构建工具gulp的使用介绍及技巧</a></li><li><a href="http://www.gulpjs.com.cn/docs/getting-started/" target="_blank" rel="noopener">gulp入门指南</a></li></ul><h3 id="react"><a href="#react" class="headerlink" title="react"></a>react</h3><ul><li><a href="http://www.react-cn.com/" target="_blank" rel="noopener">React中国</a></li><li><a href="http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html" target="_blank" rel="noopener">React 技术栈系列教程</a></li><li><a href="https://segmentfault.com/a/1190000010832044" target="_blank" rel="noopener">React组件规范</a></li></ul><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><ul><li><a href="http://backlogtool.com/git-guide/cn/" target="_blank" rel="noopener">猴子都能懂的GIT入门</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="noopener">Git教程 - 廖雪峰的官方网站</a></li></ul><h3 id="browsersync"><a href="#browsersync" class="headerlink" title="browsersync"></a>browsersync</h3><ul><li><a href="http://www.browsersync.cn/#install" target="_blank" rel="noopener">(Browsersync中文网 - 省时的浏览器同步测试工具)</a></li></ul><h3 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h3><ul><li><a href="https://nodesource.com/blog/an-absolute-beginners-guide-to-using-npm" target="_blank" rel="noopener">使用npm - NodeSource的绝对入门指南</a></li><li><a href="https://nodesource.com/blog/the-basics-of-package-json-in-node-js-and-npm?utm_source=nodeweekly&amp;utm_medium=email" target="_blank" rel="noopener">Node.js和npm - NodeSource中的Package.json的基础知识</a></li><li><a href="https://nodesource.com/blog/configuring-your-npmrc-for-an-optimal-node-js-environment" target="_blank" rel="noopener">配置.npmrc以获取最佳Node.js环境</a></li></ul><h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><ul><li><a href="https://sspai.com/post/25137" target="_blank" rel="noopener">认识与入门 Markdown</a></li></ul><h3 id="yoeman"><a href="#yoeman" class="headerlink" title="yoeman"></a>yoeman</h3><ul><li><a href="http://www.tuicool.com/articles/FBRvIbQ" target="_blank" rel="noopener">教你从零开始搭建一款前端脚手架工具</a></li></ul><h3 id="lodash"><a href="#lodash" class="headerlink" title="lodash"></a>lodash</h3><ul><li><a href="http://lodashjs.com/" target="_blank" rel="noopener">这是一个具有一致接口、模块化、高性能等特性的 JavaScript 工具库。</a></li><li><a href="https://lodash.com/docs/4.17.4#chunk" target="_blank" rel="noopener">4.17.4版本</a></li></ul><h3 id="Fiddler"><a href="#Fiddler" class="headerlink" title="Fiddler"></a>Fiddler</h3><ul><li><a href="http://www.telerik.com/fiddler" target="_blank" rel="noopener">官网</a></li><li><a href="http://kb.cnblogs.com/page/130367/" target="_blank" rel="noopener">Fiddler教程</a></li></ul><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/23162358" target="_blank" rel="noopener">分享几个日常调试方法让js调试更简单</a></li><li><a href="https://zhuanlan.zhihu.com/p/24770877" target="_blank" rel="noopener">用 Chrome 调试你的 JavaScript</a></li><li><a href="https://zhuanlan.zhihu.com/p/23080626" target="_blank" rel="noopener">JavaScript 中 console 的用法（看了这篇和上面一篇文章，你可能会感觉以前根本不会使用console）</a></li></ul><h2 id="细节，优化"><a href="#细节，优化" class="headerlink" title="细节，优化"></a>细节，优化</h2><ul><li><a href="http://www.cnblogs.com/yexiaochai/p/4219523.html" target="_blank" rel="noopener">浅谈移动前端的最佳实践</a></li><li><a href="http://www.cnblogs.com/yexiaochai/p/4901341.html" target="_blank" rel="noopener">前端优化带来的思考，浅谈前端工程化</a></li><li><a href="https://aotu.io/notes/2016/04/12/jcloud-opt/" target="_blank" rel="noopener">前端优化实践总结</a></li><li><a href="https://zhuanlan.zhihu.com/p/24495650" target="_blank" rel="noopener">减少前端代码耦合</a></li><li><a href="http://www.daqianduan.com/6419.html" target="_blank" rel="noopener">判断单、多张图片加载完成</a></li><li><a href="https://zhuanlan.zhihu.com/p/28091618" target="_blank" rel="noopener">终端代码重复率检测</a></li><li><a href="http://www.cnblogs.com/yexiaochai/p/4876099.html" target="_blank" rel="noopener">【组件化开发】前端进阶篇之如何编写可维护可升级的代码</a></li><li><a href="http://www.cnblogs.com/virtual/p/3735249.html" target="_blank" rel="noopener">作为一个web开发人员，哪些技术细节是在发布站点前你需要考虑到的</a></li><li><a href="http://www.cnblogs.com/yexiaochai/p/3589837.html" target="_blank" rel="noopener">【单页应用】我们该如何处理框架弹出层层级关系？</a></li><li><a href="http://www.alloyteam.com/2012/05/pick-up-templates-speed-up/" target="_blank" rel="noopener">剥离模板代码加速Web页面加载</a></li><li><a href="http://tgideas.qq.com/webplat/info/news_version3/804/808/811/m579/201412/293834.shtml" target="_blank" rel="noopener">移动前端系列——移动页面性能优化</a></li><li><a href="https://segmentfault.com/a/1190000005882953" target="_blank" rel="noopener">[聊一聊系列]聊一聊百度移动端首页前端速度那些事儿</a></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><a href="http://www.cnblogs.com/lxxhome/p/5980615.html" target="_blank" rel="noopener">socket.io 中文手册 socket.io 中文文档</a></li><li><a href="https://zhuanlan.zhihu.com/p/23467317" target="_blank" rel="noopener">WebSocket 与 Socket.IO</a></li><li><a href="https://zhuanlan.zhihu.com/p/26907805" target="_blank" rel="noopener">VR进化论|教你搭建通用的WebVR工程</a></li><li><a href="https://zhuanlan.zhihu.com/mtdpdiancan" target="_blank" rel="noopener">RxJS 入门</a></li><li><a href="https://segmentfault.com/a/1190000010880049" target="_blank" rel="noopener">deeplearn.js：浏览器端机器智能框架</a></li></ul><h2 id="分享和技能清单"><a href="#分享和技能清单" class="headerlink" title="分享和技能清单"></a>分享和技能清单</h2><ul><li><a href="http://www.jianshu.com/p/b7f8c5564e78" target="_blank" rel="noopener">鸡年大吉！继续前行的前端周刊（第十五期）</a></li><li><a href="http://collect.w3ctrain.com/" target="_blank" rel="noopener">前端收藏夹</a> （和上面那篇一样，都是别人的总结的，干货不少，但是‘前端收藏夹’，可能是资源太多了，给我的感觉也有点一股脑放资源的感觉，只要是资源，都放进去，少部分资源质量有点低，建议大家带参考思想看）</li><li><a href="https://github.com/hoosin/mobile-web-favorites" target="_blank" rel="noopener">移动web干货收藏夹</a></li><li><a href="https://www.awesomes.cn/" target="_blank" rel="noopener">awesomes</a> （前端一个巨大的资源库，里面的资源应有尽有）</li><li><a href="http://lib.csdn.net/" target="_blank" rel="noopener">知识库</a> （拥有很多语言，框架，库的知识图谱，值得一看！能让你了解哪个语言，框架，库所包含的知识点，每一个知识点的详情讲解，也有栗子和文章，如：<a href="http://lib.csdn.net/base/javascript/structure" target="_blank" rel="noopener">javascript知识图谱</a> <a href="http://lib.csdn.net/base/html5/structure" target="_blank" rel="noopener">html5知识图谱</a> <a href="http://lib.csdn.net/base/react/structure" target="_blank" rel="noopener">react知识图谱</a> )</li><li><a href="https://github.com/hacke2/hacke2.github.io/issues" target="_blank" rel="noopener">前端资源分享</a></li><li><a href="https://zhuanlan.zhihu.com/p/22229868" target="_blank" rel="noopener">送给前端的你，推荐几篇前端汇总文章。 - 知乎专栏</a></li><li><a href="https://github.com/darcyclarke/Front-end-Developer-Interview-Questions" target="_blank" rel="noopener">前端面试问题合集（Front-end-Developer-Interview-Questions）</a></li><li><a href="https://segmentfault.com/a/1190000002804472" target="_blank" rel="noopener">github上值得关注的前端项目</a></li><li><a href="https://www.douban.com/doulist/13701898/" target="_blank" rel="noopener">前端那点事儿（书列）</a></li><li><a href="https://segmentfault.com/a/1190000010791103" target="_blank" rel="noopener">FPB 2.0：免费的计算机编程类中文书籍 2.0</a> （迷渡大神分享的书籍，各类图书都有，也有前端的，大家可以挑着看）</li><li><a href="https://www.qcloud.com/community/article/690930001489391663?fromSource=gwzcw.58366.58366.58366" target="_blank" rel="noopener">腾讯 Web 工程师的前端书单</a></li><li><a href="https://dwqs.gitbooks.io/frontenddevhandbook/content/" target="_blank" rel="noopener">前端开发者手册</a></li><li><a href="https://www.docschina.org/" target="_blank" rel="noopener">印记中文-手册</a> （各种开发文档，webpack,vue,sass等）<br>（以下几个链接，不是文章，也不算问题吧，都是segmentfault官方举行的比赛，分享或者讨论的内容，在上面看大神的分享，代码，绝对有收获）</li><li><a href="https://segmentfault.com/q/1010000000750825" target="_blank" rel="noopener">1024 HackGame 第四关面壁人这些题目是怎么想出来的？</a></li><li><a href="https://segmentfault.com/q/1010000000689388" target="_blank" rel="noopener">把 SegmentFault 全部带回家 —— 码文章，送周边</a></li><li><a href="https://segmentfault.com/q/1010000000485947" target="_blank" rel="noopener">官方送书活动第二弹 —— 增长姿势之SF喊你来谈开发</a></li><li><a href="https://segmentfault.com/q/1010000000351723" target="_blank" rel="noopener">官方活动，深入浅出之SF喊你来谈开发！一起来分享一下你的开发知识？</a></li><li><a href="https://segmentfault.com/q/1010000000340372/a-1020000000341378" target="_blank" rel="noopener">官方30行js比赛：30行js你能做出什么？</a></li><li><a href="https://segmentfault.com/q/1010000000767310/a-1020000000767695" target="_blank" rel="noopener">【官方比赛】社区 1111 秀代码，让你来秀让你飞！</a></li></ul><h2 id="推荐博客"><a href="#推荐博客" class="headerlink" title="推荐博客"></a>推荐博客</h2><ul><li><a href="http://taobaofed.org/" target="_blank" rel="noopener">淘宝前端团队fed</a></li><li><a href="http://www.aliued.cn/" target="_blank" rel="noopener">阿里巴巴</a></li><li><a href="http://fex.baidu.com/" target="_blank" rel="noopener">百度前端团队</a></li><li><a href="https://75team.com/" target="_blank" rel="noopener">360奇舞团</a></li><li><a href="https://t.75team.com/video" target="_blank" rel="noopener">奇舞团视频教程</a></li><li><a href="https://aotu.io/" target="_blank" rel="noopener">京东设计体验部-凹凸实验室</a></li><li><a href="http://qqfe.org/" target="_blank" rel="noopener">腾讯网前端研发中心</a> （暂时不能访问）</li><li><a href="http://www.alloyteam.com/" target="_blank" rel="noopener">腾讯alloyteam</a></li><li><a href="http://imweb.io/" target="_blank" rel="noopener">腾讯前端IMWEB团队</a></li><li><a href="http://imweb.github.io/" target="_blank" rel="noopener">腾讯前端IMWEB团队-github</a></li><li><a href="http://tgideas.qq.com/" target="_blank" rel="noopener">腾讯游戏</a></li><li><a href="http://ued.sina.com.cn/?cat=4" target="_blank" rel="noopener">新浪UED</a></li><li><a href="http://www.daqianduan.com/" target="_blank" rel="noopener">大前端（饿了么）</a><br>（上面的团队博客，值得关注，博文内容质量很高，但是就是更新不频繁，下面的更新会比较多，质量也不错）</li><li><a href="http://f2e.souche.com/blog/" target="_blank" rel="noopener">搜车大无线团队博客</a></li><li><a href="https://zhuanlan.zhihu.com/dreawer" target="_blank" rel="noopener">极乐科技</a></li><li><a href="https://zhuanlan.zhihu.com/imweb" target="_blank" rel="noopener">IMWeb前端社区</a></li><li><a href="https://zhuanlan.zhihu.com/linshuai" target="_blank" rel="noopener">爱前端-知乎专栏</a></li><li><a href="https://zhuanlan.zhihu.com/jscss" target="_blank" rel="noopener">前端杂货铺</a></li><li><a href="https://zhuanlan.zhihu.com/FrontendMagazine" target="_blank" rel="noopener">前端外刊评论</a></li><li><a href="https://zhuanlan.zhihu.com/thinkingInFE" target="_blank" rel="noopener">前端解忧杂货铺</a></li><li><a href="https://zhuanlan.zhihu.com/ddfe-weekly" target="_blank" rel="noopener">DDFE 技术周刊</a></li><li><a href="https://zhuanlan.zhihu.com/qianduanzhidian" target="_blank" rel="noopener">前端之巅</a></li><li><a href="http://frontenddev.org/discover/" target="_blank" rel="noopener">Fed汇总</a></li></ul><h2 id="大牛博客"><a href="#大牛博客" class="headerlink" title="大牛博客"></a>大牛博客</h2><ul><li><a href="https://www.h5jun.com/archives/" target="_blank" rel="noopener">十年踪迹</a></li><li><a href="http://www.zhangxinxu.com/" target="_blank" rel="noopener">张鑫旭</a></li><li><a href="http://www.ruanyifeng.com/home.html" target="_blank" rel="noopener">阮一峰</a></li><li><a href="http://www.cnblogs.com/yexiaochai/" target="_blank" rel="noopener">叶小钗</a></li><li><a href="http://www.cnblogs.com/rubylouvre/" target="_blank" rel="noopener">司徒正美博客</a></li><li><a href="https://www.liaoxuefeng.com/" target="_blank" rel="noopener">廖雪峰</a></li><li><a href="http://jiongks.name/" target="_blank" rel="noopener">勾三股四</a></li><li><a href="http://www.cnblogs.com/coco1s/" target="_blank" rel="noopener">chokCoCo</a></li><li><a href="https://github.com/chokcoco" target="_blank" rel="noopener">chokCoCo-github</a></li></ul><h2 id="书籍推荐"><a href="#书籍推荐" class="headerlink" title="书籍推荐"></a>书籍推荐</h2><p>下面这些书籍可以去网站找，有电子版的。</p><p>《JavaScript高级程序设计》：（红皮书或者红宝石书）可以作为入门书籍，但同时也是高级书籍，可以快速吸收基础，等到提升再回来重新看<br>《JavaScript权威指南》：（犀牛书）可以说是js最经典的一本书了，新手看着可能会有点吃力，但是对于学js的人来说，必备的，不理解的地方就去查阅一下，很有帮助。<br>《数据结构与算法JavaScript描述》（刺猬书）<br>《编写可维护的JavaScript》（乌龟书）<br>《JavaScript DOM编程艺术 第2版》<br>《JavaScript语言精粹》（蝴蝶书）：经典的书，也是普及JavaScript的开发思维的一本书。<br>《JavaScript设计模式 》-张榕铭（百度员工写的一本书，案例生动易懂，涉及的设计模式比较全）<br>《JavaScript设计模式与开发实践》-曾琛（腾讯员工写的一本书，讲了js里面更加常用的14个设计模式）<br>《单页Web应用 JavaScript从前端到后端》<br>《<a href="http://es6.ruanyifeng.com/" target="_blank" rel="noopener">ECMAScript 6 入门</a>》可以作为es6新特性文档的一本书，而且这本书开源了，直接看就好！需要的也可以购买！<br>《HTML5移动Web开发实战》<br>《HTML5移动Web开发指南》<br>《HTML5 Canvas核心技术》：对于感受canvas的魅力，使用，动画的实现，都非常有帮助。<br>《html5与css3权威指南 第三版》-陆凌牛，这本书貌似有同名的，注意作者，另外该书分上册和下册的。我当时看的是第二版，现在已经出了第三版就推荐第三版了。<br>《锋利的jquery》：我学jquery就是看这本书，这本书给我身边的同行印象不是很好，但是我感觉不错，而且我学jquery就看了这一本书，就推荐这本了！<br>《了不起的Node js 将JavaScript进行到底》<br>《css揭秘》：看了这本书，我再也不敢说自己会css了！里面很多都是你想不到的！</p><h2 id="推荐社区"><a href="#推荐社区" class="headerlink" title="推荐社区"></a>推荐社区</h2><ul><li><a href="https://github.com/" target="_blank" rel="noopener">github</a>：这个起初我经常在上面找资源。但是没注册账号，但是后来被老大催着注册，就去了。在里面可以阅读别人的代码，向大家学习！</li><li><a href="https://segmentfault.com/" target="_blank" rel="noopener">segmentfault</a><br>知乎：虽然不是单纯的IT社区，但是里面有很多大牛和高质量的专栏！</li><li><a href="https://stackoverflow.com/" target="_blank" rel="noopener">stackoverflow</a>：一个问答社区，基本上各种问题都能在上面获得解答</li><li><a href="http://www.w3cplus.com/" target="_blank" rel="noopener">w3cplus</a>：一个前端学习的网站，里面的文章质量都挺不错的，特别是关于CSS(3)的</li><li><a href="http://www.qdfuns.com/" target="_blank" rel="noopener">前端网</a></li><li><a href="http://www.html-js.com/" target="_blank" rel="noopener">前端乱炖</a>：一个前端文章分享的社区，有很多优秀文章</li><li><a href="https://toutiao.io/" target="_blank" rel="noopener">开发者头条</a></li><li><a href="http://www.feweekly.com/issues" target="_blank" rel="noopener">前端周刊</a></li><li><a href="http://www.html5dw.com/" target="_blank" rel="noopener">HTML5梦工场</a></li><li><a href="http://www.biyeseng.cn/" target="_blank" rel="noopener">毕业僧</a></li><li><a href="http://www.imooc.com/" target="_blank" rel="noopener">慕课网</a>（貌似现在很多视频收费了，以前我看的时候，基本都是免费的）</li><li><a href="https://juejin.im/timeline" target="_blank" rel="noopener">稀土掘金</a></li><li><a href="http://www.hubwiz.com/" target="_blank" rel="noopener">汇智网</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;推荐文章-教程&quot;&gt;&lt;a href=&quot;#推荐文章-教程&quot; class=&quot;headerlink&quot; title=&quot;推荐文章(教程)&quot;&gt;&lt;/a&gt;推荐文章(教程)&lt;/h2&gt;&lt;h3 id=&quot;html-5&quot;&gt;&lt;a href=&quot;#html-5&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="web前端资料" scheme="http://www.gaomingwei.cc/tags/web%E5%89%8D%E7%AB%AF%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>(转)Git查看、删除、重命名远程分支和tag</title>
    <link href="http://www.gaomingwei.cc/Git%E6%9F%A5%E7%9C%8B%E3%80%81%E5%88%A0%E9%99%A4%E3%80%81%E9%87%8D%E5%91%BD%E5%90%8D%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF%E5%92%8Ctag.html"/>
    <id>http://www.gaomingwei.cc/Git查看、删除、重命名远程分支和tag.html</id>
    <published>2017-09-02T07:59:50.000Z</published>
    <updated>2017-09-02T08:24:52.631Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看远程分支"><a href="#查看远程分支" class="headerlink" title="查看远程分支"></a>查看远程分支</h3><p>加上-a参数可以查看远程分支，远程分支会用红色表示出来（如果你开了颜色支持的话）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -a</span><br><span class="line"> master</span><br><span class="line"> remote</span><br><span class="line"> tungway</span><br><span class="line"> v1.52</span><br><span class="line">* zrong</span><br><span class="line"> remotes/origin/master</span><br><span class="line"> remotes/origin/tungway</span><br><span class="line"> remotes/origin/v1.52</span><br><span class="line"> remotes/origin/zrong</span><br></pre></td></tr></table></figure><h3 id="删除远程分支和-tag"><a href="#删除远程分支和-tag" class="headerlink" title="删除远程分支和 tag"></a>删除远程分支和 tag</h3><p>在 Git v1.7.0 之后，可以使用这种语法删除远程分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin --delete &lt;branchName&gt;</span><br></pre></td></tr></table></figure><p>删除 tag 这么用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin --delete tag &lt;tagname&gt;</span><br></pre></td></tr></table></figure><p>否则，可以使用这种语法，推送一个空分支到远程分支，其实就相当于删除远程分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin :&lt;branchName&gt;</span><br></pre></td></tr></table></figure><p>这是删除 tag 的方法，推送一个空 tag 到远程 tag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git tag -d &lt;tagname&gt;</span><br><span class="line">git push origin :refs/tags/&lt;tagname&gt;</span><br></pre></td></tr></table></figure><p>两种语法作用完全相同。</p><h3 id="删除不存在对应远程分支的本地分支"><a href="#删除不存在对应远程分支的本地分支" class="headerlink" title="删除不存在对应远程分支的本地分支"></a>删除不存在对应远程分支的本地分支</h3><p>假设这样一种情况：</p><pre><code>- 我创建了本地分支 b1 并 pull 到远程分支 origin/b1；- 其他人在本地使用 fetch 或 pull 创建了本地的 b1 分支；- 我删除了 origin/b1 远程分支；- 其他人再次执行 fetch 或者 pull 并不会删除这个他们本地的 b1 分支，运行 git branch -a 也不能看出这个 branch 被删除了，如何处理？</code></pre><p>使用下面的代码查看 b1 的状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ git remote show origin</span><br><span class="line">* remote origin</span><br><span class="line"> Fetch URL: git@github.com:xxx/xxx.git</span><br><span class="line"> Push  URL: git@github.com:xxx/xxx.git</span><br><span class="line"> HEAD branch: master</span><br><span class="line"> Remote branches:</span><br><span class="line">   master                 tracked</span><br><span class="line">   refs/remotes/origin/b1 stale (use &apos;git remote prune&apos; to remove)</span><br><span class="line">Local branch configured for &apos;git pull&apos;:</span><br><span class="line">   master merges with remote master</span><br><span class="line">Local ref configured for &apos;git push&apos;:</span><br><span class="line">   master pushes to master (up to date)</span><br></pre></td></tr></table></figure><p>这时候能够看到 b1 是 stale 的，使用 git remote prune origin 可以将其从本地版本库中去除。</p><p>更简单的方法是使用这个命令，它在 fetch 之后删除掉没有与远程分支对应的本地分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch -p</span><br></pre></td></tr></table></figure><h3 id="重命名远程分支"><a href="#重命名远程分支" class="headerlink" title="重命名远程分支"></a>重命名远程分支</h3><p>在 git 中重命名远程分支，其实就是先删除远程分支，然后重命名本地分支，再重新提交一个远程分支。</p><p>例如下面的例子中，我需要把 devel 分支重命名为 develop 分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -av</span><br><span class="line">* devel                             752bb84 Merge pull request #158 from Gwill/devel</span><br><span class="line">master                            53b27b8 Merge pull request #138 from tdlrobin/master</span><br><span class="line">zrong                             2ae98d8 modify CCFileUtils, export getFileData</span><br><span class="line">remotes/origin/HEAD               -&gt; origin/master</span><br><span class="line">remotes/origin/add_build_script   d4a8c4f Merge branch &apos;master&apos; into add_build_script</span><br><span class="line">remotes/origin/devel              752bb84 Merge pull request #158 from Gwill/devel</span><br><span class="line">remotes/origin/devel_qt51         62208f1 update .gitignore</span><br><span class="line">remotes/origin/master             53b27b8 Merge pull request #138 from tdlrobin/master</span><br><span class="line">remotes/origin/zrong              2ae98d8 modify CCFileUtils, export getFileData</span><br></pre></td></tr></table></figure><p>删除远程分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git push --delete origin devel</span><br><span class="line">To git@github.com:zrong/quick-cocos2d-x.git</span><br><span class="line">- [deleted]         devel</span><br></pre></td></tr></table></figure><p>重命名本地分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m devel develop</span><br></pre></td></tr></table></figure><p>推送本地分支：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin develop</span><br><span class="line">Counting objects: 92, done.</span><br><span class="line">Delta compression using up to 4 threads.</span><br><span class="line">Compressing objects: 100% (48/48), done.</span><br><span class="line">Writing objects: 100% (58/58), 1.38 MiB, done.</span><br><span class="line">Total 58 (delta 34), reused 12 (delta 5)</span><br><span class="line">To git@github.com:zrong/quick-cocos2d-x.git</span><br><span class="line">* [new branch]      develop -&gt; develop</span><br></pre></td></tr></table></figure><p>然而，在 github 上操作的时候，我在删除远程分支时碰到这个错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git push --delete origin devel</span><br><span class="line">remote: error: refusing to delete the current branch: refs/heads/devel</span><br><span class="line">To git@github.com:zrong/quick-cocos2d-x.git</span><br><span class="line">! [remote rejected] devel (deletion of the current branch prohibited)</span><br><span class="line">error: failed to push some refs to &apos;git@github.com:zrong/quick-cocos2d-x.git&apos;</span><br></pre></td></tr></table></figure><p>这是由于在 github 中，devel 是项目的默认分支。要解决此问题，这样操作：</p><pre><code>- 进入 github 中该项目的 Settings 页面；- 设置 Default Branch 为其他的分支（例如：master）；- 重新执行删除远程分支命令。</code></pre><h3 id="把本地-tag-推送到远程"><a href="#把本地-tag-推送到远程" class="headerlink" title="把本地 tag 推送到远程"></a>把本地 tag 推送到远程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --tags</span><br></pre></td></tr></table></figure><h3 id="获取远程-tag"><a href="#获取远程-tag" class="headerlink" title="获取远程 tag"></a>获取远程 tag</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin tag &lt;tagname&gt;</span><br></pre></td></tr></table></figure><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote" target="_blank" rel="noopener">https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote</a></li><li><a href="http://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-both-locally-and-in-github" target="_blank" rel="noopener">http://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-both-locally-and-in-github</a></li><li><a href="http://www.cnblogs.com/deepnighttwo/archive/2011/06/18/2084438.html" target="_blank" rel="noopener">http://www.cnblogs.com/deepnighttwo/archive/2011/06/18/2084438.html</a></li><li><a href="http://stackoverflow.com/questions/14040754/deleting-remote-master-branch-refused-due-to-being-current-branch" target="_blank" rel="noopener">http://stackoverflow.com/questions/14040754/deleting-remote-master-branch-refused-due-to-being-current-branch</a></li><li><p><a href="http://weli.iteye.com/blog/1441582" target="_blank" rel="noopener">http://weli.iteye.com/blog/1441582</a></p><p><a href="https://blog.zengrong.net/post/1746.html" target="_blank" rel="noopener">原文地址</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;查看远程分支&quot;&gt;&lt;a href=&quot;#查看远程分支&quot; class=&quot;headerlink&quot; title=&quot;查看远程分支&quot;&gt;&lt;/a&gt;查看远程分支&lt;/h3&gt;&lt;p&gt;加上-a参数可以查看远程分支，远程分支会用红色表示出来（如果你开了颜色支持的话）：&lt;/p&gt;
&lt;figure 
      
    
    </summary>
    
    
      <category term="Git" scheme="http://www.gaomingwei.cc/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hexo之Next主题添加 algolia 搜索</title>
    <link href="http://www.gaomingwei.cc/Hexo%E4%B9%8BNext%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD.html"/>
    <id>http://www.gaomingwei.cc/Hexo之Next主题添加搜索功能.html</id>
    <published>2017-09-02T04:16:49.000Z</published>
    <updated>2017-09-04T09:07:08.493Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、为什么添加algolia搜索"><a href="#1、为什么添加algolia搜索" class="headerlink" title="1、为什么添加algolia搜索"></a>1、为什么添加algolia搜索</h3><pre><code>是为了可以方便的查找所需文章，提供便利！</code></pre><p>  命令安装algolia插件</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-algolia</span><br></pre></td></tr></table></figure><h3 id="2、添加效果"><a href="#2、添加效果" class="headerlink" title="2、添加效果"></a>2、添加效果</h3><pre><code>这里效果图就没有了（暂时）</code></pre><h3 id="3、去algolia-注册自己的账号，完成注册后，创建项目-index-name-注意-，打开打开API-Keys页面，里面的信息等会需要写到hexo的配置文件中。"><a href="#3、去algolia-注册自己的账号，完成注册后，创建项目-index-name-注意-，打开打开API-Keys页面，里面的信息等会需要写到hexo的配置文件中。" class="headerlink" title="3、去algolia 注册自己的账号，完成注册后，创建项目(index_name 注意)，打开打开API Keys页面，里面的信息等会需要写到hexo的配置文件中。"></a>3、去algolia 注册自己的账号，完成注册后，创建项目(index_name 注意)，打开打开API Keys页面，里面的信息等会需要写到hexo的配置文件中。</h3><p>在根目录的站点配置文件_config.yml<br>中加入如下配置，参照上图的各种key值</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">algolia:</span><br><span class="line">  appId: 'appid'</span><br><span class="line">  apiKey: 'apiKey'</span><br><span class="line">  adminApiKey: 'adminApiKey'</span><br><span class="line">  indexName: '上面填写的index名'</span><br><span class="line">  chunkSize: 5000</span><br><span class="line">  fields:</span><br><span class="line"><span class="code">    - title</span></span><br><span class="line"><span class="code">    - slug</span></span><br><span class="line"><span class="code">    - path</span></span><br><span class="line"><span class="code">    - content:strip</span></span><br></pre></td></tr></table></figure><p>在主题Next目录下找到配置文件，修改里面的 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><p>在git bash中执行(注意每次在写新文章时都要提交index)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo d</span><br><span class="line"></span><br><span class="line">hexo algolia</span><br></pre></td></tr></table></figure><p> 如下则表示成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO ...</span><br><span class="line">...</span><br><span class="line">INFO ...</span><br></pre></td></tr></table></figure><p>好了， 现在我们已经将代码提交到algolia里面了，</p><p>如果无法提交成功，先执行hexo clean即可。<br>在\themes\next下找到_config.yml，找到如下内容，将enable修改为true，labels修改为自己需要的</p><p>在themes\next\layout_partials中找到header.swig，找到以下代码并修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav class=&quot;site-nav&quot;&gt;</span><br><span class="line">  &lt;!-- 添加  theme.algolia_search.enable --&gt;</span><br><span class="line">  &#123;% set hasSearch = theme.swiftype_key || theme.algolia_search.enable || theme.tinysou_Key || config.search %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#123;% if theme.menu %&#125;</span><br><span class="line">    &lt;ul id=&quot;menu&quot; class=&quot;menu&quot;&gt;</span><br><span class="line">      &#123;% for name, path in theme.menu %&#125;</span><br><span class="line">        &#123;% set itemName = name.toLowerCase() %&#125;</span><br><span class="line">        &lt;li class=&quot;menu-item menu-item-&#123;&#123; itemName &#125;&#125;&quot;&gt;</span><br><span class="line">          &lt;a href=&quot;&#123;&#123; url_for(path) &#125;&#125;&quot; rel=&quot;section&quot;&gt;</span><br><span class="line">            &#123;% if theme.menu_icons.enable %&#125;</span><br><span class="line">              &lt;i class=&quot;menu-item-icon fa fa-fw fa-&#123;&#123;theme.menu_icons[itemName] | default(&apos;question-circle&apos;) | lower &#125;&#125;&quot;&gt;&lt;/i&gt; </span><br><span class="line"></span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">            &#123;&#123; __(&apos;menu.&apos; + itemName) &#125;&#125;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#123;% if hasSearch %&#125;</span><br><span class="line">    &lt;li class=&quot;menu-item menu-item-search&quot;&gt;</span><br><span class="line">      &#123;% if theme.swiftype_key %&#125;</span><br><span class="line">        &lt;a href=&quot;javascript:;&quot; class=&quot;st-search-show-outputs&quot;&gt;</span><br><span class="line">      &#123;% elseif config.search %&#125;</span><br><span class="line">        &lt;a href=&quot;javascript:;&quot; class=&quot;popup-trigger&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 添加 开始 --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#123;% elseif theme.algolia %&#125;</span><br><span class="line">        &lt;a href=&quot;javascript:;&quot; class=&quot;popup-trigger&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 添加 结束 --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#123;% endif %&#125;</span><br><span class="line">        &#123;% if theme.menu_icons.enable %&#125;</span><br><span class="line">          &lt;i class=&quot;menu-item-icon fa fa-search fa-fw&quot;&gt;&lt;/i&gt; &lt;br /&gt;</span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">        &#123;&#123; __(&apos;menu.search&apos;) &#125;&#125;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#123;% if hasSearch %&#125;</span><br><span class="line">    &lt;div class=&quot;site-search&quot;&gt;</span><br><span class="line">      &#123;% include &apos;search.swig&apos; %&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure><p>好了， 现在就完成添加了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1、为什么添加algolia搜索&quot;&gt;&lt;a href=&quot;#1、为什么添加algolia搜索&quot; class=&quot;headerlink&quot; title=&quot;1、为什么添加algolia搜索&quot;&gt;&lt;/a&gt;1、为什么添加algolia搜索&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;是为了可以方
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.gaomingwei.cc/tags/hexo/"/>
    
      <category term="美化" scheme="http://www.gaomingwei.cc/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hexo之Next主题添加评论</title>
    <link href="http://www.gaomingwei.cc/Hexo%E4%B9%8BNext%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA.html"/>
    <id>http://www.gaomingwei.cc/Hexo之Next主题添加评论.html</id>
    <published>2017-09-01T14:15:58.000Z</published>
    <updated>2017-09-01T14:22:28.741Z</updated>
    
    <content type="html"><![CDATA[<p>NexT主题集成了评论系统，只需要设置相关的属性即可实现功能，其目前支持多说、Disqus、Facebook评论、Hyper评论、网页云跟帖等，其中“多说”是NexT推荐的评论系统，但是多说评论系统不稳定，我们借助第三方实现评论功能</p><h2 id="注册友言账号"><a href="#注册友言账号" class="headerlink" title="注册友言账号"></a>注册友言账号</h2><p>打开<a href="http://www.uyan.cc/" target="_blank" rel="noopener">友言官网</a>，单击“注册”按钮后，按照套路可完成账号注册。</p><h2 id="获取uid"><a href="#获取uid" class="headerlink" title="获取uid"></a>获取uid</h2><p>注册完登录后，在首页单击“后台管理”按钮进入后台界面便可看到自己的用户ID，将其复制下来。</p><h2 id="主题配置文件-设置uid"><a href="#主题配置文件-设置uid" class="headerlink" title="主题配置文件 设置uid"></a>主题配置文件 设置uid</h2><p>打开主题配置文件，在其中找到属性youyan_uid，然后在:后添加之前复制的uid;(自己在配置文件里找)</p><p>然后部署， 评论得以实现。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;NexT主题集成了评论系统，只需要设置相关的属性即可实现功能，其目前支持多说、Disqus、Facebook评论、Hyper评论、网页云跟帖等，其中“多说”是NexT推荐的评论系统，但是多说评论系统不稳定，我们借助第三方实现评论功能&lt;/p&gt;
&lt;h2 id=&quot;注册友言账号&quot;&gt;
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.gaomingwei.cc/tags/hexo/"/>
    
      <category term="美化" scheme="http://www.gaomingwei.cc/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hexo之next主题设置首页不显示全文(只显示预览)</title>
    <link href="http://www.gaomingwei.cc/Hexo%E4%B9%8Bnext%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E9%A6%96%E9%A1%B5%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%85%A8%E6%96%87-%E5%8F%AA%E6%98%BE%E7%A4%BA%E9%A2%84%E8%A7%88.html"/>
    <id>http://www.gaomingwei.cc/Hexo之next主题设置首页不显示全文-只显示预览.html</id>
    <published>2017-09-01T13:55:01.000Z</published>
    <updated>2017-09-01T13:57:09.010Z</updated>
    
    <content type="html"><![CDATA[<ul><li>进入hexo博客项目的themes/next目录</li><li>用文本编辑器打开_config.yml文件</li><li>搜索”auto_excerpt”,找到如下部分：</li></ul><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Automatically Excerpt. Not recommand.</span></span><br><span class="line"><span class="section"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></span><br><span class="line">auto_excerpt:</span><br><span class="line">enable: false</span><br><span class="line">length: 150</span><br></pre></td></tr></table></figure><ul><li>把enable改为对应的false改为true，然后hexo d -g，再进主页，问题就OK！</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;进入hexo博客项目的themes/next目录&lt;/li&gt;
&lt;li&gt;用文本编辑器打开_config.yml文件&lt;/li&gt;
&lt;li&gt;搜索”auto_excerpt”,找到如下部分：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight md&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.gaomingwei.cc/tags/hexo/"/>
    
      <category term="美化" scheme="http://www.gaomingwei.cc/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Next主题美化</title>
    <link href="http://www.gaomingwei.cc/Hexo-next%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96.html"/>
    <id>http://www.gaomingwei.cc/Hexo-next主题美化.html</id>
    <published>2017-08-30T06:33:34.000Z</published>
    <updated>2017-09-05T04:17:41.763Z</updated>
    
    <content type="html"><![CDATA[<h2 id="语言设置"><a href="#语言设置" class="headerlink" title="语言设置"></a>语言设置</h2><p>将languages目录下面的zh-Hans.yml修改为zh-CN.yml或者按照文档中的修改根目录配置文件也行</p><h2 id="修改样式"><a href="#修改样式" class="headerlink" title="修改样式"></a>修改样式</h2><h3 id="1-网站标题栏背景颜色"><a href="#1-网站标题栏背景颜色" class="headerlink" title="1.网站标题栏背景颜色"></a>1.网站标题栏背景颜色</h3><p>当使用Pisces主题时，网站标题栏背景颜色是黑色的，感觉不好看，可以在source/css/_schemes/Pisces/_brand.styl中修改</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-meta</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  background: $blue-dodger; //修改为自己喜欢的颜色</span><br><span class="line"></span><br><span class="line">  +<span class="selector-tag">tablet</span>() &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">16px</span> <span class="built_in">rgba</span>(0,0,0,0.5);</span><br><span class="line">  &#125;</span><br><span class="line">  +<span class="selector-tag">mobile</span>() &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">16px</span> <span class="built_in">rgba</span>(0,0,0,0.5);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是，我们一般不主张这样修改源码的，在next/source/css/_custom目录下面专门提供了custom.styl供我们自定义样式的，因此也可以在custom.styl里面添加：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line"><span class="selector-class">.site-meta</span> &#123;</span><br><span class="line">  background: $blue; //修改为自己喜欢的颜色</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-修改内容区域的宽度"><a href="#2-修改内容区域的宽度" class="headerlink" title="2.修改内容区域的宽度"></a>2.修改内容区域的宽度</h3><p>我们用Next主题是发现在电脑上阅读文章时内容两边留的空白较多，这样在浏览代码块时经常要滚动滚动条才能阅读完整，体验不是很好，下面提供修改内容区域的宽度的方法。<br>NexT 对于内容的宽度的设定如下：</p><pre><code>- 700px，当屏幕宽度 &lt; 1600px- 900px，当屏幕宽度 &gt;= 1600px- 移动设备下，宽度自适应</code></pre><p>如果你需要修改内容的宽度，同样需要编辑样式文件。<br>在Mist和Muse风格可以用下面的方法：<br>编辑主题的 source/css/_variables/custom.styl 文件，新增变量：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 修改成你期望的宽度</span><br><span class="line">$content-desktop = 700px</span><br><span class="line"></span><br><span class="line">// 当视窗超过 1600px 后的宽度</span><br><span class="line">$content-desktop-large = 900px</span><br></pre></td></tr></table></figure><p>当怒使用pisces风格时可以用下面的方法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">header</span>&#123; <span class="attribute">width</span>: <span class="number">90%</span>; &#125;</span><br><span class="line"><span class="selector-class">.container</span> <span class="selector-class">.main-inner</span> &#123; <span class="attribute">width</span>: <span class="number">90%</span>; &#125;</span><br><span class="line"><span class="selector-class">.content-wrap</span> &#123; <span class="attribute">width</span>: <span class="built_in">calc</span>(100% - 260px); &#125;</span><br></pre></td></tr></table></figure><h3 id="3-主页显示文章摘要"><a href="#3-主页显示文章摘要" class="headerlink" title="3.主页显示文章摘要"></a>3.主页显示文章摘要</h3><p>默认情况下在主页是把文章内容全部显示出来的，如果在根目录的_config.yml中配置分页:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">per_page: 10</span><br></pre></td></tr></table></figure><p>那么每页显示10篇文章，这样的花主页就看起来不是很精简了，可以通过下面的方法来配置主页只显示文章摘要：<br>在themes/next/的_config.yml中配置：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Automatically Excerpt. Not recommand.</span></span><br><span class="line"><span class="section"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: false </span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><p>把enable项配置为true就可以了。<br>但是我们也可以看到注释中是不推荐这样做的，因为这样会强制把文章前150个字符做为摘要的，会出现描述不完整的情况，而且有时候会把文章的源码显示出来。<br>那么我们就用推荐的在文章中用<a id="more"></a>这种方式来作为文章摘要的方式，可以根据每篇文章的不同情况自己来把控摘要的内容。<br>或者是在文章中配置description也是可以的。</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo+GitHub搭建个人博客</span><br><span class="line">categories: Hexo</span><br><span class="line">comments: true</span><br><span class="line">keywords: Hexo, Blog, GitHub</span><br><span class="line">tags: [Hexo, Blog, GitHub]</span><br><span class="line">description: 使用Hexo在GitHub上搭建个人博客</span><br><span class="line">date: 2017-01-010 13:00:00</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="4-阅读次数统计-使用LeanCloud"><a href="#4-阅读次数统计-使用LeanCloud" class="headerlink" title="4.阅读次数统计(使用LeanCloud)"></a>4.阅读次数统计(使用LeanCloud)</h3><p>参考<a href="http://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="noopener">文档</a></p><h3 id="5-加入网站缩略图标"><a href="#5-加入网站缩略图标" class="headerlink" title="5.加入网站缩略图标"></a>5.加入网站缩略图标</h3><p>加入后就可以在浏览器的标签栏或者是收藏夹里面现实网站的缩略图标了。<br>在themes/next/的_config.yml中配置：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># Put your favicon.ico into `hexo-site/source/` directory.</span></span><br><span class="line">favicon: /images/favicon.ico</span><br></pre></td></tr></table></figure><p>然后把图表放到根目录的source/images/下面.</p><h3 id="6-添加友情链接页面"><a href="#6-添加友情链接页面" class="headerlink" title="6.添加友情链接页面"></a>6.添加友情链接页面</h3><p>和前面的添加关于页面、分类页面类似，不同的是Next主题默认是没有这个页面的，需要我们自己添加一些东西，比如文字翻译，添加对应图标等。 </p><p>首先通过下面的命令添加一个页面：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new pags links</span><br></pre></td></tr></table></figure><p> 会生成source/links/index.md文件.<br> 在next主题配置文件中添加：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line"> home: /</span><br><span class="line"> ......</span><br><span class="line"> about: /about</span><br><span class="line"> links: /links</span><br></pre></td></tr></table></figure><p> 添加图标：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu_icons:</span><br><span class="line"> enable: true</span><br><span class="line"> ......</span><br><span class="line"> links: users</span><br></pre></td></tr></table></figure><p>这里如果找到合适的图标呢？可以到<a href="http://fontawesome.io/" target="_blank" rel="noopener">fontawesome.io</a>这个网站来找 ，Next里面用的就是这里面的图标。<br>下一步就是要添加翻译了，要不在菜单栏现实的是 menu.links。<br>在next/languages/ 下面编辑对应的语言，添加翻译。<br>比如在zh-CN.yml中添加：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  ...</span><br><span class="line">  links: 友情链接</span><br></pre></td></tr></table></figure><p>然后可以随意编辑source/links/index.md文件就可以了.</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;语言设置&quot;&gt;&lt;a href=&quot;#语言设置&quot; class=&quot;headerlink&quot; title=&quot;语言设置&quot;&gt;&lt;/a&gt;语言设置&lt;/h2&gt;&lt;p&gt;将languages目录下面的zh-Hans.yml修改为zh-CN.yml或者按照文档中的修改根目录配置文件也行&lt;/p&gt;
&lt;h2 id=&quot;修改样式&quot;&gt;&lt;a href=&quot;#修改样式&quot; class=&quot;headerlink&quot; title=&quot;修改样式&quot;&gt;&lt;/a&gt;修改样式&lt;/h2&gt;&lt;h3 id=&quot;1-网站标题栏背景颜色&quot;&gt;&lt;a href=&quot;#1-网站标题栏背景颜色&quot; class=&quot;headerlink&quot; title=&quot;1.网站标题栏背景颜色&quot;&gt;&lt;/a&gt;1.网站标题栏背景颜色&lt;/h3&gt;&lt;p&gt;当使用Pisces主题时，网站标题栏背景颜色是黑色的，感觉不好看，可以在source/css/_schemes/Pisces/_brand.styl中修改&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.site-meta&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;padding&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;: white;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  background: $blue-dodger; //修改为自己喜欢的颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  +&lt;span class=&quot;selector-tag&quot;&gt;tablet&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(0,0,0,0.5);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  +&lt;span class=&quot;selector-tag&quot;&gt;mobile&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(0,0,0,0.5);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是，我们一般不主张这样修改源码的，在next/source/css/_custom目录下面专门提供了custom.styl供我们自定义样式的，因此也可以在custom.styl里面添加：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// Custom styles.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.site-meta&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  background: $blue; //修改为自己喜欢的颜色&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-修改内容区域的宽度&quot;&gt;&lt;a href=&quot;#2-修改内容区域的宽度&quot; class=&quot;headerlink&quot; title=&quot;2.修改内容区域的宽度&quot;&gt;&lt;/a&gt;2.修改内容区域的宽度&lt;/h3&gt;&lt;p&gt;我们用Next主题是发现在电脑上阅读文章时内容两边留的空白较多，这样在浏览代码块时经常要滚动滚动条才能阅读完整，体验不是很好，下面提供修改内容区域的宽度的方法。&lt;br&gt;NexT 对于内容的宽度的设定如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- 700px，当屏幕宽度 &amp;lt; 1600px
- 900px，当屏幕宽度 &amp;gt;= 1600px
- 移动设备下，宽度自适应
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你需要修改内容的宽度，同样需要编辑样式文件。&lt;br&gt;在Mist和Muse风格可以用下面的方法：&lt;br&gt;编辑主题的 source/css/_variables/custom.styl 文件，新增变量：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 修改成你期望的宽度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$content-desktop = 700px&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 当视窗超过 1600px 后的宽度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$content-desktop-large = 900px&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当怒使用pisces风格时可以用下面的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;header&lt;/span&gt;&amp;#123; &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;90%&lt;/span&gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.main-inner&lt;/span&gt; &amp;#123; &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;90%&lt;/span&gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.content-wrap&lt;/span&gt; &amp;#123; &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(100% - 260px); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-主页显示文章摘要&quot;&gt;&lt;a href=&quot;#3-主页显示文章摘要&quot; class=&quot;headerlink&quot; title=&quot;3.主页显示文章摘要&quot;&gt;&lt;/a&gt;3.主页显示文章摘要&lt;/h3&gt;&lt;p&gt;默认情况下在主页是把文章内容全部显示出来的，如果在根目录的_config.yml中配置分页:&lt;/p&gt;
&lt;figure class=&quot;highlight md&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;per_page: 10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那么每页显示10篇文章，这样的花主页就看起来不是很精简了，可以通过下面的方法来配置主页只显示文章摘要：&lt;br&gt;在themes/next/的_config.yml中配置：&lt;/p&gt;
&lt;figure class=&quot;highlight md&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;# Automatically Excerpt. Not recommand.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;# Please use &amp;lt;!-- more --&amp;gt; in the post to control excerpt accurately.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;auto_excerpt:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: false &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  length: 150&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;把enable项配置为true就可以了。&lt;br&gt;但是我们也可以看到注释中是不推荐这样做的，因为这样会强制把文章前150个字符做为摘要的，会出现描述不完整的情况，而且有时候会把文章的源码显示出来。&lt;br&gt;那么我们就用推荐的在文章中用
    
    </summary>
    
      <category term="Hexo" scheme="http://www.gaomingwei.cc/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="http://www.gaomingwei.cc/tags/hexo/"/>
    
      <category term="美化" scheme="http://www.gaomingwei.cc/tags/%E7%BE%8E%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>sublime快捷键</title>
    <link href="http://www.gaomingwei.cc/sublime%E5%BF%AB%E6%8D%B7%E9%94%AE.html"/>
    <id>http://www.gaomingwei.cc/sublime快捷键.html</id>
    <published>2017-08-30T02:28:33.000Z</published>
    <updated>2017-08-30T05:42:18.222Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Sublime-Text-3-快捷键精华版"><a href="#Sublime-Text-3-快捷键精华版" class="headerlink" title="Sublime Text 3 快捷键精华版"></a>Sublime Text 3 快捷键精华版</h2><p>Ctrl+Shift+P：打开命令面板<br>Ctrl+P：搜索项目中的文件<br>Ctrl+G：跳转到第几行<br>Ctrl+W：关闭当前打开文件<br>Ctrl+Shift+W：关闭所有打开文件<br>Ctrl+Shift+V：粘贴并格式化<br>Ctrl+D：选择单词，重复可增加选择下一个相同的单词<br>Ctrl+L：选择行，重复可依次增加选择下一行<br>Ctrl+Shift+L：选择多行<br>Ctrl+Shift+Enter：在当前行前插入新行<br>Ctrl+X：删除当前行<br>Ctrl+M：跳转到对应括号<br>Ctrl+U：软撤销，撤销光标位置<br>Ctrl+J：选择标签内容<br>Ctrl+F：查找内容<br>Ctrl+Shift+F：查找并替换<br>Ctrl+H：替换<br>Ctrl+R：前往 method<br>Ctrl+N：新建窗口<br>Ctrl+K+B：开关侧栏<br>Ctrl+Shift+M：选中当前括号内容，重复可选着括号本身<br>Ctrl+F2：设置/删除标记<br>Ctrl+/：注释当前行<br>Ctrl+Shift+/：当前位置插入注释<br>Ctrl+Alt+/：块注释，并Focus到首行，写注释说明用的<br>Ctrl+Shift+A：选择当前标签前后，修改标签用的<br>F11：全屏<br>Shift+F11：全屏免打扰模式，只编辑当前文件<br>Alt+F3：选择所有相同的词<br>Alt+.：闭合标签<br>Alt+Shift+数字：分屏显示<br>Alt+数字：切换打开第N个文件<br>Shift+右键拖动：光标多不，用来更改或插入列内容<br>鼠标的前进后退键可切换Tab文件<br>按Ctrl，依次点击或选取，可需要编辑的多个位置<br>按Ctrl+Shift+上下键，可替换行</p><h2 id="选择类"><a href="#选择类" class="headerlink" title="选择类"></a>选择类</h2><p>Ctrl+D 选中光标所占的文本，继续操作则会选中下一个相同的文本。<br>Alt+F3 选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。举个栗子：快速选中并更改所有相同的变量名、函数名等。<br>Ctrl+L 选中整行，继续操作则继续选择下一行，效果和 Shift+↓ 效果一样。<br>Ctrl+Shift+L 先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。<br>Ctrl+Shift+M 选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。<br>Ctrl+M 光标移动至括号内结束或开始的位置。<br>Ctrl+Enter 在下一行插入新行。举个栗子：即使光标不在行尾，也能快速向下插入一行。<br>Ctrl+Shift+Enter 在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。<br>Ctrl+Shift+[ 选中代码，按下快捷键，折叠代码。<br>Ctrl+Shift+] 选中代码，按下快捷键，展开代码。<br>Ctrl+K+0 展开所有折叠代码。<br>Ctrl+← 向左单位性地移动光标，快速移动光标。<br>Ctrl+→ 向右单位性地移动光标，快速移动光标。<br>shift+↑ 向上选中多行。<br>shift+↓ 向下选中多行。<br>Shift+← 向左选中文本。<br>Shift+→ 向右选中文本。<br>Ctrl+Shift+← 向左单位性地选中文本。<br>Ctrl+Shift+→ 向右单位性地选中文本。<br>Ctrl+Shift+↑ 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。<br>Ctrl+Shift+↓ 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。<br>Ctrl+Alt+↑ 向上添加多行光标，可同时编辑多行。<br>Ctrl+Alt+↓ 向下添加多行光标，可同时编辑多行。</p><h2 id="编辑类"><a href="#编辑类" class="headerlink" title="编辑类"></a>编辑类</h2><p>Ctrl+J 合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。<br>Ctrl+Shift+D 复制光标所在整行，插入到下一行。<br>Tab 向右缩进。<br>Shift+Tab 向左缩进。<br>Ctrl+K+K 从光标处开始删除代码至行尾。<br>Ctrl+Shift+K 删除整行。<br>Ctrl+/ 注释单行。<br>Ctrl+Shift+/ 注释多行。<br>Ctrl+K+U 转换大写。<br>Ctrl+K+L 转换小写。<br>Ctrl+Z 撤销。<br>Ctrl+Y 恢复撤销。<br>Ctrl+U 软撤销，感觉和 Gtrl+Z 一样。<br>Ctrl+F2 设置书签<br>Ctrl+T 左右字母互换。<br>F6 单词检测拼写</p><h2 id="搜索类"><a href="#搜索类" class="headerlink" title="搜索类"></a>搜索类</h2><p>Ctrl+F 打开底部搜索框，查找关键字。<br>Ctrl+shift+F 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找，略高端，未研究。<br>Ctrl+P 打开搜索框。举个栗子：1、输入当前项目中的文件名，快速搜索文件，2、输入@和关键字，查找文件中函数名，3、输入：和数字，跳转到文件中该行代码，4、输入#和关键字，查找变量名。<br>Ctrl+G 打开搜索框，自动带：，输入数字跳转到该行代码。举个栗子：在页面代码比较长的文件中快速定位。<br>Ctrl+R 打开搜索框，自动带@，输入关键字，查找文件中的函数名。举个栗子：在函数较多的页面快速查找某个函数。<br>Ctrl+： 打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等。<br>Ctrl+Shift+P 打开命令框。场景栗子：打开命名框，输入关键字，调用sublime text或插件的功能，例如使用package安装插件。<br>Esc 退出光标多行选择，退出搜索框，命令框等。</p><h2 id="显示类"><a href="#显示类" class="headerlink" title="显示类"></a>显示类</h2><p>Ctrl+Tab 按文件浏览过的顺序，切换当前窗口的标签页。<br>Ctrl+PageDown 向左切换当前窗口的标签页。<br>Ctrl+PageUp 向右切换当前窗口的标签页。<br>Alt+Shift+1 窗口分屏，恢复默认1屏（非小键盘的数字）<br>Alt+Shift+2 左右分屏-2列<br>Alt+Shift+3 左右分屏-3列<br>Alt+Shift+4 左右分屏-4列<br>Alt+Shift+5 等分4屏<br>Alt+Shift+8 垂直分屏-2屏<br>Alt+Shift+9 垂直分屏-3屏<br>Ctrl+K+B 开启/关闭侧边栏。<br>F11 全屏模式<br>Shift+F11 免打扰模式</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Sublime-Text-3-快捷键精华版&quot;&gt;&lt;a href=&quot;#Sublime-Text-3-快捷键精华版&quot; class=&quot;headerlink&quot; title=&quot;Sublime Text 3 快捷键精华版&quot;&gt;&lt;/a&gt;Sublime Text 3 快捷键精华版&lt;/
      
    
    </summary>
    
      <category term="工具类" scheme="http://www.gaomingwei.cc/categories/%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
    
      <category term="tools" scheme="http://www.gaomingwei.cc/tags/tools/"/>
    
      <category term="sublime" scheme="http://www.gaomingwei.cc/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>web_app变革之rem</title>
    <link href="http://www.gaomingwei.cc/web-app%E5%8F%98%E9%9D%A9%E4%B9%8Brem.html"/>
    <id>http://www.gaomingwei.cc/web-app变革之rem.html</id>
    <published>2017-08-30T01:23:29.000Z</published>
    <updated>2017-08-30T05:42:53.806Z</updated>
    
    <content type="html"><![CDATA[<h2 id="rem-是什么？"><a href="#rem-是什么？" class="headerlink" title="rem 是什么？"></a>rem 是什么？</h2><p>rem(font size of root element) 是指相对于元素的字体大小单位。 简单的说它就是一个相对单位; 看到rem我们一定会想起em这个单位， em(font size of the element) 是指相对于父元素的字体单位(大小),他们之间其实很相似，只不过计算规则是依赖元素是一个依赖父元素计算。</p><h2 id="为什么web-app要使用rem？"><a href="#为什么web-app要使用rem？" class="headerlink" title="为什么web_app要使用rem？"></a>为什么web_app要使用rem？</h2><p>这里我特别强调web app，web page就不能使用rem吗，其实也当然可以，不过出于兼容性的考虑在web app下使用更加能突显这个单位的价值和能力，接下来我们来看看目前一些企业的web app是怎么做屏幕适配的。</p><h3 id="1-实现强大的屏幕适配布局："><a href="#1-实现强大的屏幕适配布局：" class="headerlink" title="1.实现强大的屏幕适配布局："></a>1.实现强大的屏幕适配布局：</h3><p>我们现在在切页面布局的使用常用的单位是px，这是一个绝对单位，web app的屏幕适配有很多中做法，例如：流式布局、限死宽度，还有就是通过响应式来做，但是这些方案都不是最佳的解决方法。</p><p>流式布局的解决方案有不少弊端，它虽然可以让各种屏幕都适配，但是显示的效果极其的不好，因为只有几个尺寸的手机能够完美的显示出视觉设计师和交互最想要的效果。</p><p>在页面布局的时候都是通过百分比来定义宽度，但是高度大都是用px来固定住，所以在大屏幕的手机下显示效果会变成有些页面元素宽度被拉的很长，但是高度还是和原来一样，实际显示非常的不协调，这就是流式布局的最致命的缺点，往往只有几个尺寸的手机下看到的效果是令人满意的，其实很多视觉设计师应该无法接受这种效果，因为他们的设计图在大屏幕手机下看到的效果相当于是被横向拉长来一样。</p><p>流式布局并不是最理想的实现方式，通过大量的百分比布局，会经常出现许多兼容性的问题，还有就是对设计有很多的限制，因为他们在设计之初就需要考虑流式布局对元素造成的影响，只能设计横向拉伸的元素布局，设计的时候存在很多局限性。</p><h3 id="2-固定宽度做法"><a href="#2-固定宽度做法" class="headerlink" title="2.固定宽度做法"></a>2.固定宽度做法</h3><p> 还有一种是固定页面宽度的做法，早期有些网站把页面设置成320的宽度，超出部分留白，这样做视觉，前端都挺开心，视觉在也不用被流式布局限制自己的设计灵感了，前端也不用在搞坑爹的流式布局。但是这种解决方案也是存在一些问题，例如在大屏幕手机下两边是留白的，还有一个就是大屏幕手机下看起来页面会特别小，操作的按钮也很小，手机淘宝首页起初是这么做的，但近期改版了，采用了rem。</p><h3 id="3-响应式布局"><a href="#3-响应式布局" class="headerlink" title="3.响应式布局"></a>3.响应式布局</h3><p> 响应式这种方式在国内很少有大型企业的复杂性的网站在移动端用这种方法去做，主要原因是工作大，维护性难，所以一般都是中小型的门户或者博客类站点会采用响应式的方法从web page到web app直接一步到位，因为这样反而可以节约成本，不用再专门为自己的网站做一个web app的版本。</p><h3 id="4设置viewport进行缩放"><a href="#4设置viewport进行缩放" class="headerlink" title="4设置viewport进行缩放"></a>4设置viewport进行缩放</h3><p> 天猫的web app的首页就是采用这种方式去做的，以320宽度为基准，进行缩放，最大缩放为320*1.3 = 416，基本缩放到416都就可以兼容iphone6 plus的屏幕了，这个方法简单粗暴，又高效。说实话我觉得他和用接下去我们要讲的rem都非常高效，不过有部分同学使用过程中反应缩放会导致有些页面元素会糊的情况。</p><h2 id="rem能等比例适配所有屏幕"><a href="#rem能等比例适配所有屏幕" class="headerlink" title="rem能等比例适配所有屏幕"></a>rem能等比例适配所有屏幕</h2><h2 id="js代码实现"><a href="#js代码实现" class="headerlink" title="js代码实现"></a>js代码实现</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">doc, win</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> docEl = doc.documentElement,</span><br><span class="line">isIOS = navigator.userAgent.match(<span class="regexp">/\(i[^;]+;( U;)? CPU.+Mac OS X/</span>),</span><br><span class="line">dpr = isIOS ? <span class="built_in">Math</span>.min(win.devicePixelRatio, <span class="number">3</span>) : <span class="number">1</span>,</span><br><span class="line">dpr = <span class="built_in">window</span>.top === <span class="built_in">window</span>.self ? dpr : <span class="number">1</span>, <span class="comment">//被iframe引用时，禁止缩放</span></span><br><span class="line">resizeEvt = <span class="string">'orientationchange'</span> <span class="keyword">in</span> <span class="built_in">window</span> ? <span class="string">'orientationchange'</span> : <span class="string">'resize'</span>;</span><br><span class="line">docEl.dataset.dpr = dpr;</span><br><span class="line"><span class="keyword">var</span> recalc = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> width = docEl.clientWidth;</span><br><span class="line"><span class="keyword">if</span> (width / dpr &gt; <span class="number">1080</span>) &#123;</span><br><span class="line">width = <span class="number">1080</span> * dpr;</span><br><span class="line">&#125;</span><br><span class="line">docEl.dataset.width = width</span><br><span class="line">docEl.dataset.percent = <span class="number">100</span> * (width / <span class="number">1080</span>);</span><br><span class="line">docEl.style.fontSize = <span class="number">100</span> * (width / <span class="number">1080</span>) + <span class="string">'px'</span>;</span><br><span class="line">&#125;;</span><br><span class="line">recalc()</span><br><span class="line"><span class="keyword">if</span> (!doc.addEventListener) <span class="keyword">return</span>;</span><br><span class="line">win.addEventListener(resizeEvt, recalc, <span class="literal">false</span>);</span><br><span class="line">&#125;)(<span class="built_in">document</span>, <span class="built_in">window</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;rem-是什么？&quot;&gt;&lt;a href=&quot;#rem-是什么？&quot; class=&quot;headerlink&quot; title=&quot;rem 是什么？&quot;&gt;&lt;/a&gt;rem 是什么？&lt;/h2&gt;&lt;p&gt;rem(font size of root element) 是指相对于元素的字体大小单位。
      
    
    </summary>
    
      <category term="css" scheme="http://www.gaomingwei.cc/categories/css/"/>
    
    
      <category term="javascript" scheme="http://www.gaomingwei.cc/tags/javascript/"/>
    
      <category term="css3" scheme="http://www.gaomingwei.cc/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>map的详细用法</title>
    <link href="http://www.gaomingwei.cc/map%E7%9A%84%E8%AF%A6%E7%BB%86%E7%94%A8%E6%B3%95.html"/>
    <id>http://www.gaomingwei.cc/map的详细用法.html</id>
    <published>2017-08-29T08:10:53.000Z</published>
    <updated>2017-08-30T05:41:06.322Z</updated>
    
    <content type="html"><![CDATA[<p>map详细用法：</p><p>map是STL的一个关联容器，它提供一对一（其中第一个可以称为关键字，每个关键字只能在map中出现一次，第二个可能称为该关键字的值）的数据处理能力，由于这个特性，它完成有可能在我们处理一对一数据的时候，在编程上提供快速通道。这里说下map内部数据的组织，map内部自建一颗红黑树(一种非严格意义上的平衡二叉树)，这颗树具有对数据自动排序的功能，所以在map内部所有的数据都是有序的，后边我们会见识到有序的好处。</p><p>下面举例说明什么是一对一的数据映射。比如一个班级中，每个学生的学号跟他的姓名就存在着一一映射的关系，这个模型用map可能轻易描述，很明显学号用int描述，姓名用字符串描述(本篇文章中不用char *来描述字符串，而是采用STL中string来描述),下面给出map描述代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map&lt;int, string&gt; mapStudent;</span><br></pre></td></tr></table></figure><h2 id="1-map的构造函数"><a href="#1-map的构造函数" class="headerlink" title="1.map的构造函数"></a>1.map的构造函数</h2><p>map共提供了6个构造函数，这块涉及到内存分配器这些东西，略过不表，在下面我们将接触到一些map的构造方法，这里要说下的就是，我们通常用如下方法构造一个map：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map&lt;int, string&gt; mapStudent;</span><br></pre></td></tr></table></figure><h2 id="2-数据的插入"><a href="#2-数据的插入" class="headerlink" title="2.数据的插入"></a>2.数据的插入</h2><p>在构造map容器后，我们就可以往里面插入数据了。这里讲三种插入数据的方法：<br>第一种：用insert函数插入pair数据，下面举例说明(以下代码虽然是随手写的，应该可以在VC和GCC下编译通过，大家可以运行下看什么效果，在VC下请加入这条语句，屏蔽4786警告  #pragma warning (disable:4786) )</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mapStudent;<span class="comment">//pair&lt;int,string&gt;p;p=make_pair(v1,v2);&lt;span style="color: rgb(255, 0, 0); background-color: rgb(240, 248, 255); font-family: Arial; font-size: 13px; "&gt; &lt;/span&gt;  </span></span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">1</span>, <span class="string">"student_one"</span>));  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">2</span>, <span class="string">"student_two"</span>));  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">3</span>, <span class="string">"student_three"</span>));  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::iterator  iter;  </span><br><span class="line">       <span class="keyword">for</span>(iter = mapStudent.begin(); iter != mapStudent.end(); iter++)  </span><br><span class="line">       &#123;  </span><br><span class="line">          <span class="built_in">cout</span>&lt;&lt;iter-&gt;first&lt;&lt;<span class="string">"  "</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">make_pair()//返回类型为对应的pair类型  </span><br><span class="line">无需写出类别，就可以生成一个pair对象  </span><br><span class="line">例：  </span><br><span class="line">make_pair(1,&apos;@&apos;)  </span><br><span class="line">而不必费力的写成  </span><br><span class="line">pair&lt;int ,char&gt;(1,&apos;@&apos;)</span><br></pre></td></tr></table></figure><p>##第二种： 用insert函数插入value_type数据，下面举例说明</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mapStudent;  </span><br><span class="line">       mapStudent.insert(<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::value_type (<span class="number">1</span>, <span class="string">"student_one"</span>));  </span><br><span class="line">       mapStudent.insert(<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::value_type (<span class="number">2</span>, <span class="string">"student_two"</span>));  </span><br><span class="line">       mapStudent.insert(<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::value_type (<span class="number">3</span>, <span class="string">"student_three"</span>));  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::iterator  iter;  </span><br><span class="line">       <span class="keyword">for</span>(iter = mapStudent.begin(); iter != mapStudent.end(); iter++)  </span><br><span class="line">       &#123;  </span><br><span class="line">           <span class="built_in">cout</span>&lt;&lt;iter-&gt;first&lt;&lt;<span class="string">" "</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三种：用数组方式插入数据，下面举例说明"><a href="#第三种：用数组方式插入数据，下面举例说明" class="headerlink" title="第三种：用数组方式插入数据，下面举例说明"></a>第三种：用数组方式插入数据，下面举例说明</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mapStudent;  </span><br><span class="line">       mapStudent[<span class="number">1</span>] =  <span class="string">"student_one"</span>;  </span><br><span class="line">       mapStudent[<span class="number">2</span>] =  <span class="string">"student_two"</span>;  </span><br><span class="line">       mapStudent[<span class="number">3</span>] =  <span class="string">"student_three"</span>;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::iterator  iter;  </span><br><span class="line">       <span class="keyword">for</span>(iter = mapStudent.begin(); iter != mapStudent.end(); iter++)  </span><br><span class="line">       &#123;  </span><br><span class="line">          <span class="built_in">cout</span>&lt;&lt;iter-&gt;first&lt;&lt;<span class="string">"   "</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上三种用法，虽然都可以实现数据的插入，但是它们是有区别的，当然了第一种和第二种在效果上是完成一样的，用insert函数插入数据，在数据的插入上涉及到集合的唯一性这个概念，即当map中有这个关键字时，insert操作是插入数据不了的，但是用数组方式就不同了，它可以覆盖以前该关键字对应的值，用程序说明</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mapStudent.insert(<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::value_type (<span class="number">1</span>, <span class="string">"student_one"</span>));</span><br><span class="line">mapStudent.insert(<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::value_type (<span class="number">1</span>, <span class="string">"student_two"</span>));</span><br></pre></td></tr></table></figure><p>上面这两条语句执行后，map中1这个关键字对应的值是”student_one”，第二条语句并没有生效，那么这就涉及到我们怎么知道insert语句是否插入成功的问题了，可以用pair来获得是否插入成功，程序如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Pair&lt;<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::iterator, <span class="keyword">bool</span>&gt; Insert_Pair;  </span><br><span class="line">Insert_Pair = mapStudent.insert(<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::value_type (<span class="number">1</span>, <span class="string">"student_one"</span>));</span><br></pre></td></tr></table></figure><p>我们通过pair的第二个变量来知道是否插入成功，它的第一个变量返回的是一个map的迭代器，如果插入成功的话Insert_Pair.second应该是true的，否则为false。<br>下面给出完成代码，演示插入成功与否问题</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mapStudent;  </span><br><span class="line">       Pair&lt;<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::iterator, <span class="keyword">bool</span>&gt; Insert_Pair;  </span><br><span class="line">       Insert_Pair ＝ mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">1</span>, <span class="string">"student_one"</span>));  </span><br><span class="line">       If(Insert_Pair.second == <span class="literal">true</span>)  </span><br><span class="line">       &#123;  </span><br><span class="line">             <span class="built_in">cout</span>&lt;&lt;<span class="string">"Insert Successfully"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">       Else  </span><br><span class="line">       &#123;  </span><br><span class="line">              <span class="built_in">cout</span>&lt;&lt;<span class="string">"Insert Failure"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">       Insert_Pair ＝ mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">1</span>, <span class="string">"student_two"</span>));  </span><br><span class="line">       If(Insert_Pair.second == <span class="literal">true</span>)  </span><br><span class="line">       &#123;  </span><br><span class="line">              <span class="built_in">cout</span>&lt;&lt;<span class="string">"Insert Successfully"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">       Else  </span><br><span class="line">       &#123;  </span><br><span class="line">              <span class="built_in">cout</span>&lt;&lt;<span class="string">"Insert Failure"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::iterator  iter;  </span><br><span class="line">       <span class="keyword">for</span>(iter = mapStudent.begin(); iter != mapStudent.end(); iter++)  </span><br><span class="line">       &#123;  </span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;iter-&gt;first&lt;&lt;<span class="string">"   "</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大家可以用如下程序，看下用数组插入在数据覆盖上的效果</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mapStudent;  </span><br><span class="line">       mapStudent[<span class="number">1</span>] =  <span class="string">"student_one"</span>;  </span><br><span class="line">       mapStudent[<span class="number">1</span>] =  <span class="string">"student_two"</span>;  </span><br><span class="line">       mapStudent[<span class="number">2</span>] =  <span class="string">"student_three"</span>;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::iterator  iter;  </span><br><span class="line">       <span class="keyword">for</span>(iter = mapStudent.begin(); iter != mapStudent.end(); iter++)  </span><br><span class="line">       &#123;  </span><br><span class="line">          <span class="built_in">cout</span>&lt;&lt;iter-&gt;first&lt;&lt;<span class="string">"   "</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">`</span><br></pre></td></tr></table></figure><h2 id="3-map的大小"><a href="#3-map的大小" class="headerlink" title="3.map的大小"></a>3.map的大小</h2><p>在往map里面插入了数据，我们怎么知道当前已经插入了多少数据呢，可以用size函数，用法如下：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> nSize = mapStudent.size();</span><br></pre></td></tr></table></figure></p><h2 id="4-数据的遍历"><a href="#4-数据的遍历" class="headerlink" title="4.数据的遍历"></a>4.数据的遍历</h2><p>这里也提供三种方法，对map进行遍<br>第一种：应用前向迭代器，上面举例程序中到处都是了，略过不表<br>第二种：应用反相迭代器，下面举例说明，要体会效果，请自个动手运行程序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mapStudent;  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">1</span>, <span class="string">"student_one"</span>));  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">2</span>, <span class="string">"student_two"</span>));  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">3</span>, <span class="string">"student_three"</span>));  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::reverse_iterator  iter;  </span><br><span class="line">       <span class="keyword">for</span>(iter = mapStudent.rbegin(); iter != mapStudent.rend(); iter++)  </span><br><span class="line">       &#123;  </span><br><span class="line">          <span class="built_in">cout</span>&lt;&lt;iter-&gt;first&lt;&lt;<span class="string">"   "</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三种：用数组方式，程序说明如下"><a href="#第三种：用数组方式，程序说明如下" class="headerlink" title="第三种：用数组方式，程序说明如下"></a>第三种：用数组方式，程序说明如下</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mapStudent;  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">1</span>, <span class="string">"student_one"</span>));  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">2</span>, <span class="string">"student_two"</span>));  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">3</span>, <span class="string">"student_three"</span>));  </span><br><span class="line">       <span class="keyword">int</span> nSize = mapStudent.size()  </span><br><span class="line"><span class="comment">//此处有误，应该是 for(int nIndex = 1; nIndex &lt;= nSize; nIndex++)   </span></span><br><span class="line"><span class="comment">//by rainfish  </span></span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> nIndex = <span class="number">0</span>; nIndex &lt; nSize; nIndex++)  </span><br><span class="line">       &#123;  </span><br><span class="line">           <span class="built_in">cout</span>&lt;&lt;mapStudent[nIndex]&lt;&lt;end;  </span><br><span class="line">       &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-数据的查找（包括判定这个关键字是否在map中出现）"><a href="#5-数据的查找（包括判定这个关键字是否在map中出现）" class="headerlink" title="5.数据的查找（包括判定这个关键字是否在map中出现）"></a>5.数据的查找（包括判定这个关键字是否在map中出现）</h2><p>在这里我们将体会，map在数据插入时保证有序的好处。<br>要判定一个数据（关键字）是否在map中出现的方法比较多，这里标题虽然是数据的查找，在这里将穿插着大量的map基本用法。<br>这里给出三种数据查找方法<br>第一种：用count函数来判定关键字是否出现，其缺点是无法定位数据出现位置,由于map的特性，一对一的映射关系，就决定了count函数的返回值只有两个，要么是0，要么是1，出现的情况，当然是返回1了<br>第二种：用find函数来定位数据出现位置，它返回的一个迭代器，当数据出现时，它返回数据所在位置的迭代器，如果map中没有要查找的数据，它返回的迭代器等于end函数返回的迭代器，程序说明</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mapStudent;  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">1</span>, <span class="string">"student_one"</span>));  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">2</span>, <span class="string">"student_two"</span>));  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">3</span>, <span class="string">"student_three"</span>));  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::iterator iter;  </span><br><span class="line">       iter = mapStudent.find(<span class="number">1</span>);  </span><br><span class="line">       <span class="keyword">if</span>(iter != mapStudent.end())  </span><br><span class="line">      &#123;  </span><br><span class="line">           <span class="built_in">cout</span>&lt;&lt;<span class="string">"Find, the value is "</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">       Else  </span><br><span class="line">       &#123;  </span><br><span class="line">           <span class="built_in">cout</span>&lt;&lt;<span class="string">"Do not Find"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三种：这个方法用来判定数据是否出现，是显得笨了点，但是，我打算在这里讲解"><a href="#第三种：这个方法用来判定数据是否出现，是显得笨了点，但是，我打算在这里讲解" class="headerlink" title="第三种：这个方法用来判定数据是否出现，是显得笨了点，但是，我打算在这里讲解"></a>第三种：这个方法用来判定数据是否出现，是显得笨了点，但是，我打算在这里讲解</h2><p>Lower_bound函数用法，这个函数用来返回要查找关键字的下界(是一个迭代器)<br>Upper_bound函数用法，这个函数用来返回要查找关键字的上界(是一个迭代器)<br>例如：map中已经插入了1，2，3，4的话，如果lower_bound(2)的话，返回的2，而upper-bound（2）的话，返回的就是3<br>Equal_range函数返回一个pair，pair里面第一个变量是Lower_bound返回的迭代器，pair里面第二个迭代器是Upper_bound返回的迭代器，如果这两个迭代器相等的话，则说明map中不出现这个关键字，程序说明</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mapStudent;  </span><br><span class="line">       mapStudent[<span class="number">1</span>] =  <span class="string">"student_one"</span>;  </span><br><span class="line">       mapStudent[<span class="number">3</span>] =  <span class="string">"student_three"</span>;  </span><br><span class="line">       mapStudent[<span class="number">5</span>] =  <span class="string">"student_five"</span>;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::iterator  iter;  </span><br><span class="line">       iter = mapStudent.lower_bound(<span class="number">2</span>);  </span><br><span class="line">      &#123;  </span><br><span class="line">       <span class="comment">//返回的是下界3的迭代器  </span></span><br><span class="line">       <span class="built_in">cout</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">       iter = mapStudent.lower_bound(<span class="number">3</span>);  </span><br><span class="line">       &#123;  </span><br><span class="line">       <span class="comment">//返回的是下界3的迭代器  </span></span><br><span class="line">       <span class="built_in">cout</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">        iter = mapStudent.upper_bound(<span class="number">2</span>);  </span><br><span class="line">       &#123;  </span><br><span class="line">       <span class="comment">//返回的是上界3的迭代器  </span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">       iter = mapStudent.upper_bound(<span class="number">3</span>);  </span><br><span class="line">      &#123;  </span><br><span class="line">       <span class="comment">//返回的是上界5的迭代器  </span></span><br><span class="line">       <span class="built_in">cout</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">      Pair&lt;<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::iterator, <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::iterator&gt; mapPair;  </span><br><span class="line">      mapPair = mapStudent.equal_range(<span class="number">2</span>);  </span><br><span class="line">      <span class="keyword">if</span>(mapPair.first == mapPair.second)  </span><br><span class="line">      &#123;  </span><br><span class="line">          <span class="built_in">cout</span>&lt;&lt;<span class="string">"Do not Find"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">       Else  </span><br><span class="line">       &#123;  </span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Find"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">       mapPair = mapStudent.equal_range(<span class="number">3</span>);  </span><br><span class="line">       <span class="keyword">if</span>(mapPair.first == mapPair.second)  </span><br><span class="line">       &#123;  </span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">"Do not Find"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">       Else  </span><br><span class="line">       &#123;  </span><br><span class="line">           <span class="built_in">cout</span>&lt;&lt;<span class="string">"Find"</span>&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##6.  数据的清空与判空</p><p>清空map中的数据可以用clear()函数，判定map中是否有数据可以用empty()函数，它返回true则说明是空map</p><h2 id="7-数据的删除"><a href="#7-数据的删除" class="headerlink" title="7.  数据的删除"></a>7.  数据的删除</h2><p>这里要用到erase函数，它有三个重载了的函数，下面在例子中详细说明它们的用法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mapStudent;  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">1</span>, <span class="string">"student_one"</span>));  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">2</span>, <span class="string">"student_two"</span>));  </span><br><span class="line">       mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">3</span>, <span class="string">"student_three"</span>));  </span><br><span class="line">       <span class="comment">//如果你要演示输出效果，请选择以下的一种，你看到的效果会比较好  </span></span><br><span class="line">       <span class="comment">//如果要删除1,用迭代器删除  </span></span><br><span class="line">       <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::iterator iter;  </span><br><span class="line">       iter = mapStudent.find(<span class="number">1</span>);  </span><br><span class="line">       mapStudent.erase(iter);  </span><br><span class="line">       <span class="comment">//如果要删除1，用关键字删除  </span></span><br><span class="line">       <span class="keyword">int</span> n = mapStudent.erase(<span class="number">1</span>);<span class="comment">//如果删除了会返回1，否则返回0  </span></span><br><span class="line">       <span class="comment">//用迭代器，成片的删除  </span></span><br><span class="line">       <span class="comment">//一下代码把整个map清空  </span></span><br><span class="line">       mapStudent.earse(mapStudent.begin(), mapStudent.end());  </span><br><span class="line">       <span class="comment">//成片删除要注意的是，也是STL的特性，删除区间是一个前闭后开的集合  </span></span><br><span class="line">     <span class="comment">//自个加上遍历代码，打印输出吧  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-其他一些函数用法"><a href="#8-其他一些函数用法" class="headerlink" title="8.其他一些函数用法"></a>8.其他一些函数用法</h2><p>这里有swap,key_comp,value_comp,get_allocator等函数，感觉到这些函数在编程用的不是很多，略过不表，有兴趣的话可以自个研究</p><h2 id="9-排序"><a href="#9-排序" class="headerlink" title="9.排序"></a>9.排序</h2><p>这里要讲的是一点比较高深的用法了,排序问题，STL中默认是采用小于号来排序的，以上代码在排序上是不存在任何问题的，因为上面的关键字是int型，它本身支持小于号运算，在一些特殊情况，比如关键字是一个结构体，涉及到排序就会出现问题，因为它没有小于号操作，insert等函数在编译的时候过不去，下面给出两个方法解决这个问题</p><h3 id="第一种：小于号重载，程序举例"><a href="#第一种：小于号重载，程序举例" class="headerlink" title="第一种：小于号重载，程序举例"></a>第一种：小于号重载，程序举例</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line">uing <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line">Typedef <span class="class"><span class="keyword">struct</span> <span class="title">tagStudentInfo</span>  </span></span><br><span class="line"><span class="class">&#123;</span>  </span><br><span class="line">       <span class="keyword">int</span>      nID;  </span><br><span class="line">       String   strName;  </span><br><span class="line">&#125;StudentInfo, *PStudentInfo;  <span class="comment">//学生信息  </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">       <span class="keyword">int</span> nSize;  </span><br><span class="line">       <span class="comment">//用学生信息映射分数  </span></span><br><span class="line">       <span class="built_in">map</span>&lt;StudentInfo, <span class="keyword">int</span>&gt;mapStudent;  </span><br><span class="line">       <span class="built_in">map</span>&lt;StudentInfo, <span class="keyword">int</span>&gt;::iterator iter;  </span><br><span class="line">       StudentInfo studentInfo;  </span><br><span class="line">       studentInfo.nID = <span class="number">1</span>;  </span><br><span class="line">       studentInfo.strName = <span class="string">"student_one"</span>  </span><br><span class="line">       mapStudent.insert(pair&lt;StudentInfo, <span class="keyword">int</span>&gt;(studentInfo, <span class="number">90</span>));  </span><br><span class="line">       studentInfo.nID = <span class="number">2</span>;  </span><br><span class="line">       studentInfo.strName = <span class="string">"student_two"</span>;  </span><br><span class="line">       mapStudent.insert(pair&lt;StudentInfo, <span class="keyword">int</span>&gt;(studentInfo, <span class="number">80</span>));  </span><br><span class="line">       <span class="keyword">for</span> (iter=mapStudent.begin(); iter!=mapStudent.end(); iter++)  </span><br><span class="line">         <span class="built_in">cout</span>&lt;&lt;iter-&gt;first.nID&lt;&lt;<span class="built_in">endl</span>&lt;&lt;iter-&gt;first.strName&lt;&lt;<span class="built_in">endl</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">endl</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上程序是无法编译通过的，只要重载小于号，就OK了，如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Typedef <span class="class"><span class="keyword">struct</span> <span class="title">tagStudentInfo</span>  </span></span><br><span class="line"><span class="class">&#123;</span>  </span><br><span class="line">       <span class="keyword">int</span>      nID;  </span><br><span class="line">       String   strName;  </span><br><span class="line">       Bool <span class="keyword">operator</span> &lt; (tagStudentInfo <span class="keyword">const</span>&amp; _A) <span class="keyword">const</span>  </span><br><span class="line">       &#123;  </span><br><span class="line">              <span class="comment">//这个函数指定排序策略，按nID排序，如果nID相等的话，按strName排序  </span></span><br><span class="line">              If(nID &lt; _A.nID)  <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">              If(nID == _A.nID) <span class="keyword">return</span> strName.compare(_A.strName) &lt; <span class="number">0</span>;  </span><br><span class="line">              Return <span class="literal">false</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">&#125;StudentInfo, *PStudentInfo;  <span class="comment">//学生信息</span></span><br></pre></td></tr></table></figure><h3 id="第二种：仿函数的应用，这个时候结构体中没有直接的小于号重载，程序说明"><a href="#第二种：仿函数的应用，这个时候结构体中没有直接的小于号重载，程序说明" class="headerlink" title="第二种：仿函数的应用，这个时候结构体中没有直接的小于号重载，程序说明"></a>第二种：仿函数的应用，这个时候结构体中没有直接的小于号重载，程序说明</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;  </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;  </span><br><span class="line">Typedef <span class="class"><span class="keyword">struct</span> <span class="title">tagStudentInfo</span>  </span></span><br><span class="line"><span class="class">&#123;</span>  </span><br><span class="line">       <span class="keyword">int</span>      nID;  </span><br><span class="line">       String   strName;  </span><br><span class="line">&#125;StudentInfo, *PStudentInfo;  <span class="comment">//学生信息  </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sort</span>  </span></span><br><span class="line"><span class="class">&#123;</span>  </span><br><span class="line">       Public:  </span><br><span class="line">       <span class="function">Bool <span class="title">operator</span><span class="params">()</span> <span class="params">(StudentInfo <span class="keyword">const</span> &amp;_A, StudentInfo <span class="keyword">const</span> &amp;_B)</span> <span class="keyword">const</span>  </span></span><br><span class="line"><span class="function">       </span>&#123;  </span><br><span class="line">              If(_A.nID &lt; _B.nID) <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">              If(_A.nID == _B.nID) <span class="keyword">return</span> _A.strName.compare(_B.strName) &lt; <span class="number">0</span>;  </span><br><span class="line">              Return <span class="literal">false</span>;  </span><br><span class="line">       &#125;  </span><br><span class="line">&#125;;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">       <span class="comment">//用学生信息映射分数  </span></span><br><span class="line">       <span class="built_in">map</span>&lt;StudentInfo, <span class="keyword">int</span>, sort&gt;mapStudent;  </span><br><span class="line">       StudentInfo studentInfo;  </span><br><span class="line">       studentInfo.nID = <span class="number">1</span>;  </span><br><span class="line">       studentInfo.strName = <span class="string">"student_one"</span>;  </span><br><span class="line">       mapStudent.insert(pair&lt;StudentInfo, <span class="keyword">int</span>&gt;(studentInfo, <span class="number">90</span>));  </span><br><span class="line">       studentInfo.nID = <span class="number">2</span>;  </span><br><span class="line">       studentInfo.strName = <span class="string">"student_two"</span>;  </span><br><span class="line">       mapStudent.insert(pair&lt;StudentInfo, <span class="keyword">int</span>&gt;(studentInfo, <span class="number">80</span>));  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-另外"><a href="#10-另外" class="headerlink" title="10.另外"></a>10.另外</h2><p>由于STL是一个统一的整体，map的很多用法都和STL中其它的东西结合在一起，比如在排序上，这里默认用的是小于号，即less&lt;&gt;，如果要从大到小排序呢，这里涉及到的东西很多，在此无法一一加以说明。<br>还要说明的是，map中由于它内部有序，由红黑树保证，因此很多函数执行的时间复杂度都是log2N的，如果用map函数可以实现的功能，而STL  Algorithm也可以完成该功能，建议用map自带函数，效率高一些。<br>下面说下，map在空间上的特性，否则，估计你用起来会有时候表现的比较郁闷，由于map的每个数据对应红黑树上的一个节点，这个节点在不保存你的数据时，是占用16个字节的，一个父节点指针，左右孩子指针，还有一个枚举值（标示红黑的，相当于平衡二叉树中的平衡因子），我想大家应该知道，这些地方很费内存了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;map详细用法：&lt;/p&gt;
&lt;p&gt;map是STL的一个关联容器，它提供一对一（其中第一个可以称为关键字，每个关键字只能在map中出现一次，第二个可能称为该关键字的值）的数据处理能力，由于这个特性，它完成有可能在我们处理一对一数据的时候，在编程上提供快速通道。这里说下map内部
      
    
    </summary>
    
      <category term="工具类" scheme="http://www.gaomingwei.cc/categories/%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
    
      <category term="tools" scheme="http://www.gaomingwei.cc/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>如何将本地代码上传到Github中去</title>
    <link href="http://www.gaomingwei.cc/(ubuntu)%E5%A6%82%E4%BD%95%E5%B0%86%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0Github%E4%B8%AD%E5%8E%BB.html"/>
    <id>http://www.gaomingwei.cc/(ubuntu)如何将本地代码上传到Github中去.html</id>
    <published>2017-08-28T06:37:36.000Z</published>
    <updated>2017-08-30T05:40:11.472Z</updated>
    
    <content type="html"><![CDATA[<h2 id="检查是否安装git"><a href="#检查是否安装git" class="headerlink" title="检查是否安装git"></a>检查是否安装git</h2><p>可以使用git –version 测试，如果没有安装，用以下命令安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git git-core 安装git</span><br></pre></td></tr></table></figure></p><h2 id="获取秘钥"><a href="#获取秘钥" class="headerlink" title="获取秘钥"></a>获取秘钥</h2><p>ssh-keygen -C “你的github邮箱”　-f ./ssh/github<br>这时候会在你的电脑上~./下生成一个目录　ssh　文件夹<br>用以下命令打开编辑：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ssh -keygen -t rsa   //获取秘钥</span><br></pre></td></tr></table></figure><h2 id="秘钥认证"><a href="#秘钥认证" class="headerlink" title="秘钥认证"></a>秘钥认证</h2><p>接下来登录我们的github在登录左上角里面进去设置，打开设置后你会发现在左边有个ssh　秘钥，进去把刚刚在命令行打开的文本里面的内容复制粘贴进去，保存．<br>好了，至此我们的环境就软搭建完成．</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git@github.com</span><br></pre></td></tr></table></figure><h2 id="本地创建项目文件"><a href="#本地创建项目文件" class="headerlink" title="本地创建项目文件"></a>本地创建项目文件</h2><p>在本地创建一个存放上传文件的的到github的仓库，进入其中，输入以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:xxx-xxx.git   // git@github.com:xxx-xxx.git 这里的地址是你仓库里项目的路径</span><br></pre></td></tr></table></figure><p>这样你在云端仓库的项目就会clone在你本地电脑里面．</p><p>之后就按照下面的步骤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git add . //更新整个目录</span><br><span class="line">git config user.name &quot;xxx-xxx&quot; //xxx-xxx  你的github名称（首次）</span><br><span class="line">git donfig user.email &quot;xxx-xxx@163.com&quot;  // xx-xxx@163.com　你的邮箱（首次）</span><br><span class="line">git commit -m &quot;更新的版本说明&quot;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>之后提交文件直接把项目文件放到这个目录下， 代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> git add .</span><br><span class="line">git commit -m &quot;更新版本说明&quot;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>OK搞定了！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;检查是否安装git&quot;&gt;&lt;a href=&quot;#检查是否安装git&quot; class=&quot;headerlink&quot; title=&quot;检查是否安装git&quot;&gt;&lt;/a&gt;检查是否安装git&lt;/h2&gt;&lt;p&gt;可以使用git –version 测试，如果没有安装，用以下命令安装：&lt;br&gt;&lt;fi
      
    
    </summary>
    
      <category term="Github使用指南" scheme="http://www.gaomingwei.cc/categories/Github%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    
    
      <category term="ubuntu" scheme="http://www.gaomingwei.cc/tags/ubuntu/"/>
    
      <category term="git" scheme="http://www.gaomingwei.cc/tags/git/"/>
    
      <category term="github" scheme="http://www.gaomingwei.cc/tags/github/"/>
    
      <category term="node" scheme="http://www.gaomingwei.cc/tags/node/"/>
    
      <category term="ssh" scheme="http://www.gaomingwei.cc/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>谈谈前端面试问题</title>
    <link href="http://www.gaomingwei.cc/%E8%B0%88%E8%B0%88%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98.html"/>
    <id>http://www.gaomingwei.cc/谈谈前端面试问题.html</id>
    <published>2017-08-28T06:35:45.000Z</published>
    <updated>2017-08-30T05:38:57.733Z</updated>
    
    <content type="html"><![CDATA[<p>从公司前端团队建立以来，一年多的时间已经过去了。这期间，招聘自然是少不了的，招进来的人有10来个，面过的人更是数不胜数，自然也从中得到一些体会，不能算是深刻地经验，只能算作一些思考吧，或许对于认同其理念的人来说，也算是一种参考了。<br>我现在已经很少纠结面试一个人应该问什么、考什么等问题了，不是说成长了或是怎么了，只是之前仔细分析了一下面试的目的，然后从目的往前推算如何在面试中获取这些信息，最后结合前端的知识点和职业特性，把“如何面试一个前端开发”总结成几条规则。每次以此套用，屡试不爽。今天要分享的也正是这一个过程，可能对于其他人来说并不一定完全适用，但是这种思路，我感觉还是有些意义的。</p><h2 id="第一步，分析你想要什么样的人"><a href="#第一步，分析你想要什么样的人" class="headerlink" title="第一步，分析你想要什么样的人"></a>第一步，分析你想要什么样的人</h2><p>面试的第一步就是要分析你想要什么样的人，不管是你的个人喜好，还是团队气质，技术水平，甚至是性别年龄，都是一些衡量标准，把这些标准用优先级列一个表格出来，按照表格继续进行下一步的分析。<br>例如对于我来说，在这一步我会这样总结，暂且称之为“期望点”：<br>技术热情很重要，我不需要单纯的把技术当做吃饭家伙的人。<br>做事态度很重要，我不想招聘天天抱怨却不去解决问题的人。<br>学习能力，总结能力，能够自我进步的人，而不是需要手把手教的。<br>分析能力，其实也就是解决问题的能力。<br>技术经验，当然越多越好，如果缺乏，至少要表现出成长潜力。<br>其实每个条件，都是针对以后工作中可能出现的问题的规避，也是职场生存的基本素质。</p><h2 id="第二步，分析如何考察每个“期望点”"><a href="#第二步，分析如何考察每个“期望点”" class="headerlink" title="第二步，分析如何考察每个“期望点”"></a>第二步，分析如何考察每个“期望点”</h2><p>考察有几种方式，就跟面试有很多种方式一样，这里只是提供一个思路啦，就是我自己的想法，算作参考吧。<br>技术热情。我面试人的时候一般很少用“提问式面试”，不会刻意提一个技术问题让你去解决然后搞得对方紧张兮兮，我主要靠引导，会引导出一些技术话题来，例如一些热门话题，一些技术热点难点，一些新工具，然后我会看对方的反应，他们听到这些话题后是立马来了兴趣，还是一点反应都没有，甚至从来没听说过也不表现出希望学习它们的状态？其实这样就很容易看出一个面试者对待技术的热情了，然后再补充一些类似于“平常玩些什么技术？”之类的话题。主要是让对方来说，来表达，我见过很多面试者都是比较腼腆的，但是谈到技术话题就两眼发光精神焕发，这样的开发者，技术想不好都不行。<br>做事态度。今天中午我还跟朋友出去吃饭的时候谈起这个话题。创业公司有时候真的就是个坑，需要面对很多不如意，例如薪资、福利或者是业务流程之类的问题，面对这些问题你的态度是怎样的？一味抱怨？还是能从大局的角度来考虑这些问题？老板跟员工从来就不是对立面的，其实他们是合作共赢的，如果不能理解这一点，那就没法在一个创业公司好好做下去。所以面试的时候，我会问”为什么离开上一个公司？”，如果能说出一些前公司的问题来，最好就要带着解决方案，至少你要想过我下一家公司在这些问题的方面应该是怎样的。而不是一味的抱怨，这不好那不好，片面的看待问题。创业公司是个坑，但是也有可能会是一座崎岖不平的高山之路，我们希望能招聘到可以跨着崎岖一起爬上山顶的人。<br>学习总结能力。创业公司相对于大公司来说，的确是忙的，而且人又少，能够手把手教你的机会太少，大多数时间还是要靠个人成长（当然有个好的团队还是很重要的，潜移默化的影响）。而且做技术大多提倡自我提升。对于这个“期望点”，我会通过考察第一点的时候顺带提取这些信息，例如谈到某个技术的时候，我会问一下，学这个是为了做什么？什么时候学的，如何学习的。又或是问一些“平常看什么书？什么时候看？从什么渠道了解最新的知识？”。看着是很虚的话题，面试者完全可以瞎编乱造，不过一个小时的面试下来，如果面试者都是胡编乱造的话，破绽只会越来越明显。<br>分析解决问题的能力。 之前在知乎上看到一个问题，就是讨论前端面试应该问一些什么。其中提到一点，问他在前公司做过什么项目，如何做的，使用了什么技术，是怎么考虑的，遇到了什么问题如何解决的之类的问题。这点对于有工作经验的人非常有用，所以毕业第一份工作一定要选好，不要去那种会让你技术逼格降低的公司，例如一些传统技术公司，你在那里工作就是为了拿薪水，对于自身的成长方面只能是“呵呵”。前几天面过一个要价3W/m的技术，问他什么都一问三不知，年纪也熬的不小了，30多岁，但是真的是啥都不会，连刚毕业的大学生都比不过，我感觉他对自我的思考对技术的思考基本上是不断在倒退的状态，很难让人接受他。<br>技术经验和成长潜力。技术经验就是指你之前积累的经验，当然越多越好，包括 技术广度和深度方面的经验，项目管理经验，架构经验工具化经验开发流程经验，协调管理经验。如果没有经验的应届生也没事，我一般会给应届生讲一些知识点，有的面试者会充满兴趣，问这问那，或者试着自己给出解决方案，这样的面试者我认为就是具备这种潜力的，所以即使现在经验不足，那潜力还是有的，毕竟对应届生要求不能太高。</p><h2 id="第三步-不断从经验中总结"><a href="#第三步-不断从经验中总结" class="headerlink" title="第三步 不断从经验中总结"></a>第三步 不断从经验中总结</h2><p>其实这篇文章是很久前写的，过了一段时间后，其实是由不少新感悟。例如昨天团队离职的一位同学，他来了公司大概2个周，因为公司突然发生一些状况，我们几个带头的都很忙，优点疏忽了他，而且他主动性也不是很高，造成了他自身的困扰，于是就离职了。<br>这种情况下，我也不会沮丧或者责怪自己，因为从中能够得到教训，什么样的人潜力大？什么样的人走不远？什么样的人适合创业？这些都会慢慢从中体会一二。<br>对于昨天这种情况，我的总结是：耐得住寂寞，同时也要主动去改变一些现状。<br>其实前端团队来来去去也不少人了，这些都是经验。其实我从来没有跟离职的同事闹出过什么不愉快的事情，大家都还是朋友，至今跟我们第一位离职的同学仍然保持非常好的联系。不过有时候也会遇到奇葩，例如有一次一个同学入职第一天就离职了，人还没介绍，我想了半天想不清楚哪里让他不愉快了，简直太莫名其妙，其实从面试的时候就能看出一些端倪来了，只是当时觉得应该没什么，后来发现面试的时候发现的一些细节还是要多多注意的。毕竟技术只是一方面，能跟你一起走到最后的更不容易，所以我现在也很珍惜团队里的同学。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;从公司前端团队建立以来，一年多的时间已经过去了。这期间，招聘自然是少不了的，招进来的人有10来个，面过的人更是数不胜数，自然也从中得到一些体会，不能算是深刻地经验，只能算作一些思考吧，或许对于认同其理念的人来说，也算是一种参考了。&lt;br&gt;我现在已经很少纠结面试一个人应该问什
      
    
    </summary>
    
      <category term="前端面试指南" scheme="http://www.gaomingwei.cc/categories/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E6%8C%87%E5%8D%97/"/>
    
    
      <category term="前端面试" scheme="http://www.gaomingwei.cc/tags/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
</feed>
